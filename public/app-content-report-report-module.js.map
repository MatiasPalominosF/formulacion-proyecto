{"version":3,"sources":["./src/app/_pipe/filter-date.pipe.ts","./src/app/content/report/report.module.ts","./src/app/content/report/report-list/report-list.component.ts","./src/app/content/report/report-list/report-list.component.html","./src/app/_services/export-excel.service.ts"],"names":[],"mappings":"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","file":"app-content-report-report-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterDate'\n})\nexport class FilterDatePipe implements PipeTransform {\n\n  transform(row: any, f1: Date, f2?: Date): any {\n    if (row == null){\n      return;\n    }\n    f1.toString().length == 0 ? f1 = new Date() : f1;\n    f2 == null ? f2 = new Date() : f2;\n    if (f1 >= f2 || f1 == null) { return row; }\n    return row.filter(x => {\n      return new Date(x.date.toDate()) >= new Date(f1) && new Date(x.date.toDate()) <= new Date(f2)\n    });\n\n\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportListComponent } from './report-list/report-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BreadcrumbModule } from 'src/app/_layout/breadcrumb/breadcrumb.module';\r\nimport { CardModule } from '../partials/general/card/card.module';\r\nimport { BlockUIModule } from 'ng-block-ui';\r\nimport { BlockTemplateComponent } from 'src/app/_layout/blockui/block-template.component';\r\nimport { NgbModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FilterDatePipe } from 'src/app/_pipe/filter-date.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportListComponent, FilterDatePipe],\r\n  imports: [\r\n    CommonModule,\r\n    BreadcrumbModule,\r\n    CardModule,\r\n    NgbModule,\r\n    NgbPaginationModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BlockUIModule.forRoot({\r\n      template: BlockTemplateComponent\r\n    }),\r\n    RouterModule.forChild([\r\n      {\r\n        path: 'report-list',\r\n        component: ReportListComponent\r\n      }\r\n    ]),\r\n  ]\r\n})\r\nexport class ReportModule { }\r\n","import { DecimalPipe } from '@angular/common';\r\nimport { Component, OnInit, PipeTransform } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { SaleService } from 'src/app/_api/sale/sale.service';\r\nimport { Product } from 'src/app/_models/product2';\r\nimport { ExportExcelService } from 'src/app/_services/export-excel.service';\r\n\r\nexport interface ExportData {\r\n  nombre?: string;\r\n  stock?: string;\r\n  cantidad_vendida?: number;\r\n  fecha_venta?: Date;\r\n  precio_total?: number;\r\n  se_anulo?: boolean;\r\n  medida?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-report-list',\r\n  templateUrl: './report-list.component.html',\r\n  styleUrls: ['./report-list.component.css']\r\n})\r\nexport class ReportListComponent implements OnInit {\r\n\r\n  @BlockUI('reportTable') blockUIReportTable: NgBlockUI;\r\n\r\n  public breadcrumb: any;\r\n  private currentUser: any;\r\n  public pipe: any;\r\n  public page = 1;\r\n  public pageSize = 4;\r\n  public collectionSize: any;\r\n  public productSortable: any;\r\n  public filter = new FormControl('');\r\n  public d3: any;\r\n  public d4: any;\r\n  public from = new Date('December 25, 1995 13:30:00');;\r\n  public to = new Date();\r\n  public disabled = true;\r\n  public fgDate: FormGroup;\r\n\r\n  private PRODUCT: Product[];\r\n  private dataExports: Array<ExportData> = [];\r\n  private dataExport: ExportData = {};\r\n  public productSearch: Observable<Product[]>;\r\n\r\n  public options = {\r\n    close: false,\r\n    expand: true,\r\n    minimize: true,\r\n    reload: true\r\n  };\r\n  public headElements = ['#', 'Producto', 'Cantidad', 'Precio total', 'Fecha'];\r\n\r\n  constructor(\r\n    private saleService: SaleService,\r\n    private fbDate: FormBuilder,\r\n    private excelService: ExportExcelService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.breadcrumb = {\r\n      'mainlabel': 'Informes',\r\n      'links': [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/ecommerce'\r\n        },\r\n        {\r\n          'name': 'Informe de ventas',\r\n          'isLink': false,\r\n          'link': ''\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.fgDate = this.fbDate.group({\r\n      from: [null, [Validators.required]],\r\n      to: [null, [Validators.required]]\r\n    })\r\n\r\n    this.getUserLogged();\r\n    this.getAllSales();\r\n  }\r\n\r\n\r\n  // Custom Day View Starts\r\n  isWeekend(date: NgbDateStruct) {\r\n    const d = new Date(date.year, date.month - 1, date.day);\r\n    return d.getDay() === 0 || d.getDay() === 6;\r\n  }\r\n\r\n  isDisabled(date: NgbDateStruct, current: { month: number }) {\r\n    return date.month !== current.month;\r\n  }\r\n\r\n  getUserLogged(): void {\r\n    if (localStorage.getItem('currentUser')) {\r\n      this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n  }\r\n\r\n  getAllSales(): void {\r\n    this.blockUIReportTable.start('Loading..');\r\n    this.saleService.getFullInfoSale(this.currentUser.uid).subscribe(data => {\r\n      console.log(data);\r\n      this.PRODUCT = data;\r\n      this.collectionSize = this.PRODUCT.length;\r\n      this.searchData(this.pipe);\r\n      this.productSortable = this.PRODUCT;\r\n      this.blockUIReportTable.stop();\r\n    });\r\n  }\r\n\r\n  exportAsXLSX(): void {\r\n    if (this.productSearch != null) {\r\n      this.PRODUCT.forEach(element => {\r\n        this.dataExport.nombre = element.name;\r\n        this.dataExport.stock = element.stock;\r\n        this.dataExport.cantidad_vendida = element.quantity;\r\n        this.dataExport.fecha_venta = element.date.toDate();\r\n        this.dataExport.precio_total = element.totalPrice;\r\n        this.dataExport.se_anulo = element.cancellation;\r\n        this.dataExport.medida = element.measure;\r\n        console.log(this.dataExport);\r\n        this.dataExports.push(this.dataExport);\r\n        this.dataExport = {};\r\n      });\r\n\r\n      console.log(\"dataExports\", this.dataExports);\r\n      this.excelService.exportAsExcelFile(this.dataExports, 'ventas');\r\n      this.dataExports = [];\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n  *\r\n  * '@param' pipe\r\n  */\r\n  searchData(pipe: DecimalPipe) {\r\n    console.log(\"this.productSearch \", this.productSearch);\r\n    this.productSearch = this.filter.valueChanges.pipe(\r\n      startWith(''),\r\n      map(text => this.search(text, pipe))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Search table\r\n   * '@param' text\r\n   * '@param' pipe\r\n   */\r\n  search(text: string, pipe: PipeTransform) {\r\n    return this.PRODUCT.filter(response => {\r\n      const term = text.toLowerCase();\r\n      return response.name.toLowerCase().includes(term)\r\n    });\r\n  }\r\n\r\n\r\n  reloadReportTable() {\r\n    this.blockUIReportTable.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIReportTable.stop();\r\n    }, 2500);\r\n  }\r\n\r\n}\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n  </div>\r\n  <div class=\"content-wrapper\">\r\n    <section id=\"horizontal-form-layouts\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\" *blockUI=\"'reportTable'; message: 'Loading'\">\r\n          <m-card\r\n            [options]=\"options\"\r\n            (reloadFunction)=\"reloadReportTable($event)\"\r\n          >\r\n            <ng-container mCardHeaderTitle> Informe de ventas </ng-container>\r\n            <ng-container mCardBody>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <form>\r\n                    <div class=\"form-group form-inline\">\r\n                      Buscar:\r\n                      <input\r\n                        class=\"form-control ml-2\"\r\n                        type=\"text\"\r\n                        [formControl]=\"filter\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group form-inline\">\r\n                    Desde:\r\n                    <input\r\n                      type=\"date\"\r\n                      placeholder=\"yyyy-mm-dd\"\r\n                      [(ngModel)]=\"from\"\r\n                      name=\"from\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group form-inline\">\r\n                    Hasta:\r\n                    <input\r\n                      type=\"date\"\r\n                      placeholder=\"yyyy-mm-dd\"\r\n                      [(ngModel)]=\"to\"\r\n                      name=\"to\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group form-inline\">\r\n                    <button (click)=\"exportAsXLSX()\" type=\"button\" class=\"btn btn-icon btn-info mr-1\">\r\n                      <i class=\"icon-doc\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"table-responsive card-body\">\r\n                <table class=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th *ngFor=\"let head of headElements\" scope=\"col\">\r\n                        {{ head }}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      mdbTableCol\r\n                      *ngFor=\"\r\n                        let element of productSearch\r\n                          | async\r\n                          | filterDate: from:to\r\n                          | slice\r\n                            : (page - 1) * pageSize\r\n                            : (page - 1) * pageSize + pageSize;\r\n                        index as i\r\n                      \"\r\n                    >\r\n                      <th scope=\"row\">{{ i + 1 }}</th>\r\n                      <td>\r\n                        <ngb-highlight\r\n                          [result]=\"element.name\"\r\n                          [term]=\"filter.value\"\r\n                        >\r\n                        </ngb-highlight>\r\n                      </td>\r\n                      <td>\r\n                        <ngb-highlight\r\n                          [result]=\"element.quantity\"\r\n                          [term]=\"filter.value\"\r\n                        >\r\n                        </ngb-highlight>\r\n                      </td>\r\n                      <td>\r\n                        <ngb-highlight\r\n                          [result]=\"element.totalPrice\"\r\n                          [term]=\"filter.value\"\r\n                        >\r\n                        </ngb-highlight>\r\n                      </td>\r\n                      <td>\r\n                        <ngb-highlight\r\n                          [result]=\"element.date.toDate() | date: 'dd/MM/yyyy'\"\r\n                          [term]=\"element.date.toDate() | date: 'dd/MM/yyyy'\"\r\n                        >\r\n                        </ngb-highlight>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div class=\"d-flex justify-content-between p-2\">\r\n                  <ngb-pagination\r\n                    [collectionSize]=\"collectionSize\"\r\n                    [(page)]=\"page\"\r\n                    [pageSize]=\"pageSize\"\r\n                  >\r\n                  </ngb-pagination>\r\n\r\n                  <select\r\n                    class=\"custom-select\"\r\n                    style=\"width: auto\"\r\n                    [(ngModel)]=\"pageSize\"\r\n                  >\r\n                    <option [ngValue]=\"2\">2 ítems por página</option>\r\n                    <option [ngValue]=\"4\">4 ítems por página</option>\r\n                    <option [ngValue]=\"6\">6 ítems por página</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </m-card>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportExcelService {\n\n  constructor() { }\n\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    console.log('worksheet', worksheet);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n\n  private saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], {\n      type: EXCEL_TYPE\n    });\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n  }\n}\n"],"sourceRoot":"webpack:///"}