{"version":3,"sources":["./src/app/content/pages/dropzone/dropzone.component.ts","./src/app/content/pages/dropzone/dropzone.component.html","./src/app/content/pages/dropzone/dropzone.module.ts","ngx-dropzone/lib/ngx-dropzone-label.directive.ts","ngx-dropzone/lib/helpers.ts","ngx-dropzone/lib/ngx-dropzone-preview/ngx-dropzone-preview.component.ts","ngx-dropzone/lib/ngx-dropzone.service.ts","ngx-dropzone/lib/ngx-dropzone/ngx-dropzone.component.ts","ngx-dropzone/lib/ngx-dropzone-preview/ngx-dropzone-image-preview/ngx-dropzone-image-preview.component.ts","ngx-dropzone/lib/ngx-dropzone-preview/ngx-dropzone-remove-badge/ngx-dropzone-remove-badge.component.ts","ngx-dropzone/lib/ngx-dropzone-preview/ngx-dropzone-video-preview/ngx-dropzone-video-preview.component.ts","ngx-dropzone/lib/ngx-dropzone.module.ts"],"names":[],"mappings":"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","file":"app-content-pages-dropzone-dropzone-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgBlockUI, BlockUI } from 'ng-block-ui';\r\n@Component({\r\n    selector: 'app-dropzone',\r\n    templateUrl: './dropzone.component.html',\r\n    styleUrls: ['./dropzone.component.css']\r\n})\r\nexport class DropzoneComponent implements OnInit {\r\n    public breadcrumb: any;\r\n    @BlockUI('dropzoneGallery') blockUIDropzone: NgBlockUI;\r\n    constructor() { }\r\n    ngOnInit(): void {\r\n        this.breadcrumb = {\r\n       'mainlabel': 'Dropzone',\r\n       'links': [\r\n       {\r\n        'name': 'Home',\r\n        'isLink': true,\r\n        'link': '/dashboard/sales'\r\n        },\r\n        {\r\n                'name': 'Page',\r\n                'isLink': true,\r\n                'link': ''\r\n            },\r\n              {\r\n                'name': 'Dropzone',\r\n                'isLink': false\r\n             }\r\n            ]\r\n        };\r\n    }\r\n    options = {\r\n      close: true,\r\n      expand: true,\r\n      minimize: true,\r\n      reload: true\r\n    };\r\n    files: File[] = [];\r\n    SelectMultipleFile(event) {\r\n        this.files.push(...event.addedFiles);\r\n    }\r\n     file: any;\r\n      SelectSingleFile(event) {\r\n        this.file = event.addedFiles;\r\n    }\r\n    MultiplefilesonRemove(event) {\r\n      this.files.splice(this.files.indexOf(event), 1);\r\n    }\r\n    SinglefileonRemove(event) {\r\n      this.file.splice(this.files.indexOf(event), 1);\r\n    }\r\n    reloadDorpzone() {\r\n      this.blockUIDropzone.start('Loading..');\r\n  \r\n      setTimeout(() => {\r\n        this.blockUIDropzone.stop();\r\n      }, 2500);\r\n    }\r\n}\r\n","<div class=\"app-content content\">\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"content-header row mb-1\">\r\n            <app-breadcrumb class=\"col-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n        </div>\r\n        <div class=\"content-body\">\r\n            <!-- Dropzone section start -->\r\n            <section id=\"dropzone-examples\"  *blockUI=\"'dropzoneGallery'; message: 'Loading'\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <m-card [options]=\"options\" (reloadFunction)=\"reloadDorpzone($event)\">\r\n                            <ng-container mCardHeaderTitle>\r\n                                Single File Upload\r\n                              </ng-container>\r\n                              <ng-container mCardBody>\r\n                                    <p class=\"card-text\">This example uploads a single file using ngx-dropzone.\r\n                                        User can either click on the dropzone area and select single files or just drop all selected files\r\n                                        in the dropzone area. This example is the most basic setup for dropzone.</p>\r\n                                        <div class = \"card-content collapse show\">\r\n                                            <div class =\"card-header\">\r\n                                                <h4 class=\"card-title\">The default dropzone.</h4>\r\n                                            </div>\r\n                                    <ngx-dropzone class=\"_dropzone\" (change)=\"SelectSingleFile($event)\">\r\n                                        <ngx-dropzone-label>\r\n                                            <div class=\"dz-default dz-message\">\r\n                                                <span class = \"dz-default\">Drop files here to upload</span>\r\n                                            </div>\r\n                                        </ngx-dropzone-label>\r\n                                        <ngx-dropzone-preview class=\"dropzone\" *ngFor=\"let f of file\" [removable]=\"true\" (removed)=\"SinglefileonRemove(f)\">\r\n                                            <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                                        </ngx-dropzone-preview>\r\n                                    </ngx-dropzone>\r\n                                    <div class =\"card-header\">\r\n                                        <h4 class=\"card-title\">The disabled but expanding dropzone.</h4>\r\n                                    </div>\r\n                                           \r\n                                    <ngx-dropzone  class=\"_dropzone\" (change)=\"SelectSingleFile($event)\" [disabled]=\"true\" [expandable]=\"true\">\r\n                                        <ngx-dropzone-label>\r\n                                            <div class=\"dz-default dz-message\">\r\n                                                <span class = \"dz-default\">Drop files here to upload</span>\r\n                                            </div>\r\n                                        </ngx-dropzone-label>\r\n                                        <ngx-dropzone-preview  class=\"dropzone\" *ngFor=\"let f of file\">\r\n                                            <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                                        </ngx-dropzone-preview>\r\n                                    </ngx-dropzone>\r\n                                    <div class =\"card-header\">\r\n                                        <h4 class=\"card-title\">A custom dropzone.</h4>\r\n                                    </div>\r\n                                         \r\n                                    <div class=\"custom-dropzone\" ngx-dropzone [accept]=\"'image/*'\" (change)=\"SelectSingleFile($event)\">\r\n                                        <ngx-dropzone-label>\r\n                                            <div class=\"dz-default dz-message\">\r\n                                                <span class = \"dz-default\">My custome dropzone</span>\r\n                                            </div>\r\n                                        </ngx-dropzone-label>\r\n                                        <ngx-dropzone-image-preview  ngProjectAs=\"ngx-dropzone-preview\" *ngFor=\"let f of file\" [file]=\"f\" [removable]=\"true\" (removed)=\"SinglefileonRemove(f)\">\r\n                                            <ngx-dropzone-label class=\"dropzone1\">{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                                        </ngx-dropzone-image-preview>\r\n                                    </div>\r\n                                    </div>\r\n                            \r\n                                </ng-container>\r\n                        </m-card>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <m-card [options]=\"options\" (reloadFunction)=\"reloadDorpzone($event)\">\r\n                            <ng-container mCardHeaderTitle>\r\n                                Multiple File Upload\r\n                              </ng-container>\r\n                              <ng-container mCardBody>\r\n                                    <p class=\"card-text\">This example uploads a multiple files using ngx-dropzone. \r\n                                        By default, dropzone is a multiple file uploader. User can either click\r\n                                        on the dropzone area and select multiple files or just drop all selected files\r\n                                        in the dropzone area. This example is the most basic setup for dropzone.</p>\r\n                                        <ngx-dropzone  class=\"_dropzone\" (change)=\"SelectMultipleFile($event)\">\r\n                                            <ngx-dropzone-label>\r\n                                                <div class=\"dz-default dz-message\">\r\n                                                    <span class = \"dz-default\">Drop files here to upload</span>\r\n                                                </div>\r\n                                            </ngx-dropzone-label>\r\n                                            <ngx-dropzone-preview class=\"dropzone\" *ngFor=\"let f of files\" [removable]=\"true\" (removed)=\"MultiplefilesonRemove(f)\">\r\n                                                <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                                            </ngx-dropzone-preview>\r\n                                        </ngx-dropzone>\r\n                                        \r\n                                        <div class =\"card-header\">\r\n                                            <h4 class=\"card-title\">The disabled but expanding dropzone.</h4>\r\n                                        </div>\r\n                                        \r\n                                        <ngx-dropzone class=\"_dropzone\" (change)=\"SelectMultipleFile($event)\" [disabled]=\"true\" [expandable]=\"true\">\r\n                                            <ngx-dropzone-label>\r\n                                                <div class=\"dz-default dz-message\">\r\n                                                <span class = \"dz-default\">Drop files here to upload</span>\r\n                                            </div>\r\n                                            </ngx-dropzone-label>\r\n                                            <ngx-dropzone-preview  class=\"dropzone\" *ngFor=\"let f of files\">\r\n                                                <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                                            </ngx-dropzone-preview>\r\n                                        </ngx-dropzone>\r\n                                        \r\n                                        <div class =\"card-header\">\r\n                                            <h4 class=\"card-title\">A custom dropzone.</h4>\r\n                                        </div>\r\n                                        \r\n                                        <div class=\"custom-dropzone\" ngx-dropzone [accept]=\"'image/*'\" (change)=\"SelectMultipleFile($event)\">\r\n                                            <ngx-dropzone-label>\r\n                                                <div class=\"dz-default dz-message\">\r\n                                                    <span class = \"dz-default\">My custome dropzone</span>\r\n                                                </div>\r\n                                            </ngx-dropzone-label>\r\n                                            <ngx-dropzone-image-preview  ngProjectAs=\"ngx-dropzone-preview\" *ngFor=\"let f of files\" [file]=\"f\" [removable]=\"true\" (removed)=\"MultiplefilesonRemove(f)\">\r\n                                                <ngx-dropzone-label class=\"dropzone1\">{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                                            </ngx-dropzone-image-preview>\r\n                                        </div>\r\n                                    </ng-container>\r\n                          </m-card>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <!-- // Dropzone section end -->\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- END: Content-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DropzoneComponent } from './dropzone.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { BreadcrumbModule } from 'src/app/_layout/breadcrumb/breadcrumb.module';\r\nimport { BlockUIModule } from 'ng-block-ui';\r\nimport { CardModule } from '../../partials/general/card/card.module';\r\n@NgModule({\r\n  declarations: [DropzoneComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxDropzoneModule,\r\n    BreadcrumbModule,\r\n    BlockUIModule,\r\n    CardModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: 'dropzone',\r\n        component: DropzoneComponent\r\n      }\r\n    ])\r\n  ]\r\n})\r\nexport class DropzoneModule { }\r\n","import { Directive } from '@angular/core';\n\n@Directive({\n\tselector: 'ngx-dropzone-label'\n})\nexport class NgxDropzoneLabelDirective { }\n","\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * Taken from https://github.com/angular/components/blob/master/src/cdk/coercion/boolean-property.ts\n */\nexport function coerceBooleanProperty(value: any): boolean\n{\n\treturn value != null && `${value}` !== 'false';\n}\n\n/**\n * Whether the provided value is considered a number.\n * Taken from https://github.com/angular/components/blob/master/src/cdk/coercion/number-property.ts\n */\nexport function coerceNumberProperty(value: any): number\n{\n\t// parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n\t// and other non-number values as NaN, where Number just uses 0) but it considers the string\n\t// '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n\treturn (!isNaN(parseFloat(value as any)) && !isNaN(Number(value))) ? Number(value) : null;\n}\n","import { Component, Input, Output, EventEmitter, HostBinding, HostListener } from '@angular/core';\nimport { coerceBooleanProperty } from '../helpers';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\n\nenum KEY_CODE {\n\tBACKSPACE = 8,\n\tDELETE = 46\n}\n\n@Component({\n\tselector: 'ngx-dropzone-preview',\n\ttemplate: `\n\t\t<ng-content select=\"ngx-dropzone-label\"></ng-content>\n\t\t<ngx-dropzone-remove-badge *ngIf=\"removable\" (click)=\"_remove($event)\">\n\t\t</ngx-dropzone-remove-badge>\n\t`,\n\tstyles: [`:host(){background-image:linear-gradient(to top,#ededed,#efefef,#f1f1f1,#f4f4f4,#f6f6f6)}:host():focus,:host():hover{background-image:linear-gradient(to top,#e3e3e3,#ebeaea,#e8e7e7,#ebeaea,#f4f4f4);outline:0}:host():focus ngx-dropzone-remove-badge,:host():hover ngx-dropzone-remove-badge{opacity:1}:host() ngx-dropzone-remove-badge{opacity:0}:host() ::ng-deep ngx-dropzone-label{overflow-wrap:break-word}`]\n})\nexport class NgxDropzonePreviewComponent {\n\n\tconstructor(\n\t\tprotected sanitizer: DomSanitizer\n\t) { }\n\n\t/** The file to preview. */\n\t@Input() file: File;\n\n\t/** Allow the user to remove files. */\n\t@Input()\n\tget removable(): boolean {\n\t\treturn this._removable;\n\t}\n\tset removable(value: boolean) {\n\t\tthis._removable = coerceBooleanProperty(value);\n\t}\n\tprotected _removable = false;\n\n\t/** Emitted when the element should be removed. */\n\t@Output() readonly removed = new EventEmitter<File>();\n\n\t@HostListener('keyup', ['$event'])\n\tkeyEvent(event: KeyboardEvent) {\n\t\tswitch (event.keyCode) {\n\t\t\tcase KEY_CODE.BACKSPACE:\n\t\t\tcase KEY_CODE.DELETE:\n\t\t\t\tthis.remove();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/** We use the HostBinding to pass these common styles to child components. */\n\t@HostBinding('style')\n\tget hostStyle(): SafeStyle {\n\t\tconst styles = `\n\t\t\tdisplay: flex;\n\t\t\theight: 140px;\n\t\t\tmin-height: 140px;\n\t\t\tmin-width: 180px;\n\t\t\tmax-width: 180px;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder-radius: 5px;\n\t\t\tposition: relative;\n\t\t`;\n\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(styles);\n\t}\n\n\t/** Make the preview item focusable using the tab key. */\n\t@HostBinding('tabindex') tabIndex = 0;\n\n\t/** Remove method to be used from the template. */\n\t_remove(event) {\n\t\tevent.stopPropagation();\n\t\tthis.remove();\n\t}\n\n\t/** Remove the preview item (use from component code). */\n\tremove() {\n\t\tif (this._removable) {\n\t\t\tthis.removed.next(this.file);\n\t\t}\n\t}\n\n\tprotected async readFile(): Promise<string | ArrayBuffer> {\n\t\treturn new Promise<string | ArrayBuffer>((resolve, reject) => {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = e => {\n\t\t\t\tresolve((e.target as FileReader).result);\n\t\t\t};\n\n\t\t\treader.onerror = e => {\n\t\t\t\tconsole.error(`FileReader failed on file ${this.file.name}.`);\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\tif (!this.file) {\n\t\t\t\treturn reject('No file to read. Please provide a file using the [file] Input property.');\n\t\t\t}\n\n\t\t\treader.readAsDataURL(this.file);\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nexport interface FileSelectResult {\n\n\t/** The added files, emitted in the filesAdded event. */\n\taddedFiles: File[];\n\n\t/** The rejected files, emitted in the filesRejected event. */\n\trejectedFiles: RejectedFile[];\n}\n\nexport interface RejectedFile extends File {\n\n\t/** The reason the file was rejected. */\n\treason?: RejectReason;\n}\n\nexport type RejectReason = 'type' | 'size' | 'no_multiple';\n\n/**\n * This service contains the filtering logic to be applied to\n * any dropped or selected file. If a file matches all criteria\n * like maximum size or accept type, it will be emitted in the\n * addedFiles array, otherwise in the rejectedFiles array.\n */\n@Injectable()\nexport class NgxDropzoneService {\n\n\tparseFileList(files: FileList, accept: string, maxFileSize: number, multiple: boolean): FileSelectResult {\n\n\t\tconst addedFiles: File[] = [];\n\t\tconst rejectedFiles: RejectedFile[] = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tconst file = files.item(i);\n\n\t\t\tif (!this.isAccepted(file, accept)) {\n\t\t\t\tthis.rejectFile(rejectedFiles, file, 'type');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (maxFileSize && file.size > maxFileSize) {\n\t\t\t\tthis.rejectFile(rejectedFiles, file, 'size');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!multiple && addedFiles.length >= 1) {\n\t\t\t\tthis.rejectFile(rejectedFiles, file, 'no_multiple');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\taddedFiles.push(file);\n\t\t}\n\n\t\tconst result: FileSelectResult = {\n\t\t\taddedFiles,\n\t\t\trejectedFiles\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tprivate isAccepted(file: File, accept: string): boolean {\n\n\t\tif (accept === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst acceptFiletypes = accept.split(',').map(it => it.toLowerCase().trim());\n\t\tconst filetype = file.type.toLowerCase();\n\t\tconst filename = file.name.toLowerCase();\n\n\t\tconst matchedFileType = acceptFiletypes.find(acceptFiletype => {\n\n\t\t\t// check for wildcard mimetype (e.g. image/*)\n\t\t\tif (acceptFiletype.endsWith('/*')) {\n\t\t\t\treturn filetype.split('/')[0] === acceptFiletype.split('/')[0];\n\t\t\t}\n\n\t\t\t// check for file extension (e.g. .csv)\n\t\t\tif (acceptFiletype.startsWith(\".\")) {\n\t\t\t\treturn filename.endsWith(acceptFiletype);\n\t\t\t}\n\n\t\t\t// check for exact mimetype match (e.g. image/jpeg)\n\t\t\treturn acceptFiletype == filetype;\n\t\t});\n\n\t\treturn !!matchedFileType;\n\t}\n\n\tprivate rejectFile(rejectedFiles: RejectedFile[], file: File, reason: RejectReason) {\n\n\t\tconst rejectedFile = file as RejectedFile;\n\t\trejectedFile.reason = reason;\n\n\t\trejectedFiles.push(rejectedFile);\n\t}\n}\n","import { Component, OnInit, EventEmitter, Output, Input, ViewChild, ContentChildren, QueryList, HostBinding, HostListener, Self, ElementRef } from '@angular/core';\nimport { NgxDropzoneService, FileSelectResult } from '../ngx-dropzone.service';\nimport { coerceBooleanProperty, coerceNumberProperty } from '../helpers';\nimport { NgxDropzonePreviewComponent } from '../ngx-dropzone-preview/ngx-dropzone-preview.component';\n\nexport interface NgxDropzoneChangeEvent {\n  source: NgxDropzoneComponent;\n  addedFiles: File[];\n  rejectedFiles: File[];\n}\n\n@Component({\n  selector: 'ngx-dropzone, [ngx-dropzone]',\n  template: `<input #fileInput type=\"file\" [id]=\"id\" [multiple]=\"multiple\" [accept]=\"accept\" [disabled]=\"disabled\"\n  (change)=\"_onFilesSelected($event)\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\"\n  [attr.aria-describedby]=\"ariaDescribedBy\">\n<ng-content select=\"ngx-dropzone-label\" *ngIf=\"!_hasPreviews\"></ng-content>\n<ng-content select=\"ngx-dropzone-preview\"></ng-content>\n<ng-content></ng-content>\n`,\n  styles: [`:host(){display:flex;align-items:center;height:180px;background:#fff;cursor:pointer;color:#717386;border:2px dashed #717386;border-radius:5px;font-size:16px;overflow-x:auto}:host().ngx-dz-hovered{border-style:solid}:host().ngx-dz-disabled{opacity:.5;cursor:no-drop;pointer-events:none}:host().expandable{overflow:hidden;height:unset;min-height:180px;flex-wrap:wrap}:host().unclickable{cursor:default}:host() ::ng-deep ngx-dropzone-label{text-align:center;z-index:10;margin:10px auto}:host() input{width:.1px;height:.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}:host() input:focus+::ng-deep ngx-dropzone-label{outline:#000 dotted 1px;outline:-webkit-focus-ring-color auto 5px}`],\n  providers: [NgxDropzoneService]\n})\nexport class NgxDropzoneComponent {\n\n  constructor(\n    @Self() private service: NgxDropzoneService\n  ) { }\n\n  /** A list of the content-projected preview children. */\n  @ContentChildren(NgxDropzonePreviewComponent, { descendants: true })\n  _previewChildren: QueryList<NgxDropzonePreviewComponent>;\n\n  get _hasPreviews(): boolean {\n    return !!this._previewChildren.length;\n  }\n\n  /** A template reference to the native file input element. */\n  @ViewChild('fileInput') _fileInput: ElementRef;\n\n  /** Emitted when any files were added or rejected. */\n  @Output() readonly change = new EventEmitter<NgxDropzoneChangeEvent>();\n\n  /** Set the accepted file types. Defaults to '*'. */\n  @Input() accept = '*';\n\n  /** Disable any user interaction with the component. */\n  @Input()\n  @HostBinding('class.ngx-dz-disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    if (this._isHovered) {\n      this._isHovered = false;\n    }\n  }\n  private _disabled = false;\n\n  /** Allow the selection of multiple files. */\n  @Input()\n  get multiple(): boolean {\n    return this._multiple;\n  }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n  private _multiple = true;\n\n  /** Set the maximum size a single file may have. */\n  @Input()\n  get maxFileSize(): number {\n    return this._maxFileSize;\n  }\n  set maxFileSize(value: number) {\n    this._maxFileSize = coerceNumberProperty(value);\n  }\n  private _maxFileSize: number = undefined;\n\n  /** Allow the dropzone container to expand vertically. */\n  @Input()\n  @HostBinding('class.expandable')\n  get expandable(): boolean {\n    return this._expandable;\n  }\n  set expandable(value: boolean) {\n    this._expandable = coerceBooleanProperty(value);\n  }\n  private _expandable: boolean = false;\n\n  /** Open the file selector on click. */\n  @Input()\n  @HostBinding('class.unclickable')\n  get disableClick(): boolean {\n    return this._disableClick;\n  }\n  set disableClick(value: boolean) {\n    this._disableClick = coerceBooleanProperty(value);\n  }\n  private _disableClick = false;\n\n  /** Expose the id, aria-label, aria-labelledby and aria-describedby of the native file input for proper accessibility. */\n  @Input() id: string;\n  @Input('aria-label') ariaLabel: string;\n  @Input('aria-labelledby') ariaLabelledby: string;\n  @Input('aria-describedby') ariaDescribedBy: string;\n\n  @HostBinding('class.ngx-dz-hovered')\n  _isHovered = false;\n\n  /** Show the native OS file explorer to select files. */\n  @HostListener('click')\n  _onClick() {\n    if (!this.disableClick) {\n      this.showFileSelector();\n    } \n  }\n\n  @HostListener('dragover', ['$event'])\n  _onDragOver(event) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.preventDefault(event);\n    this._isHovered = true;\n  }\n\n  @HostListener('dragleave')\n  _onDragLeave() {\n    this._isHovered = false;\n  }\n\n  @HostListener('drop', ['$event'])\n  _onDrop(event) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.preventDefault(event);\n    this._isHovered = false;\n    this.handleFileDrop(event.dataTransfer.files);\n  }\n  \n  showFileSelector() {\n    if (!this.disabled) {\n      (this._fileInput.nativeElement as HTMLInputElement).click();\n    }\n  }\n\n  _onFilesSelected(event) {\n    const files: FileList = event.target.files;\n    this.handleFileDrop(files);\n\n    // Reset the native file input element to allow selecting the same file again\n    this._fileInput.nativeElement.value = '';\n\n    // fix(#32): Prevent the default event behaviour which caused the change event to emit twice.\n    this.preventDefault(event);\n  }\n\n  private handleFileDrop(files: FileList) {\n    const result = this.service.parseFileList(files, this.accept, this.maxFileSize, this.multiple);\n\n    this.change.next({\n      addedFiles: result.addedFiles,\n      rejectedFiles: result.rejectedFiles,\n      source: this\n    });\n  }\n\n  private preventDefault(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { NgxDropzonePreviewComponent } from '../ngx-dropzone-preview.component';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ngx-dropzone-image-preview',\n  template: `\n    <img [src]=\"imageSrc\" />\n\t\t<ng-content select=\"ngx-dropzone-label\"></ng-content>\n    <ngx-dropzone-remove-badge *ngIf=\"removable\" (click)=\"_remove($event)\">\n    </ngx-dropzone-remove-badge>\n\t`,\n  styles: [`:host(){min-width:unset!important;max-width:unset!important;padding:0!important}:host():focus img,:host():hover img{opacity:.7}:host():focus ngx-dropzone-remove-badge,:host():hover ngx-dropzone-remove-badge{opacity:1}:host() ngx-dropzone-remove-badge{opacity:0}:host() img{max-height:100%;border-radius:5px;opacity:.8}:host() ::ng-deep ngx-dropzone-label{position:absolute;overflow-wrap:break-word}`],\n  providers: [\n    {\n      provide: NgxDropzonePreviewComponent,\n      useExisting: NgxDropzoneImagePreviewComponent\n    }\n  ]\n})\nexport class NgxDropzoneImagePreviewComponent extends NgxDropzonePreviewComponent implements OnInit {\n\n  constructor(\n    sanitizer: DomSanitizer\n  ) {\n    super(sanitizer);\n  }\n\n  /** The image data source. */\n  imageSrc: string | ArrayBuffer = '';\n\n  ngOnInit() {\n    this.readFile()\n      .then(img => setTimeout(() => this.imageSrc = img))\n      .catch(err => console.error(err));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-dropzone-remove-badge',\n  template: `\n    <svg>\n      <line x1=\"0\" y1=\"0\" x2=\"10\" y2=\"10\" />\n      <line x1=\"0\" y1=\"10\" x2=\"10\" y2=\"0\" />\n    </svg>\n  `,\n  styles: [`:host(){display:flex;justify-content:center;align-items:center;height:22px;width:22px;position:absolute;top:5px;right:5px;border-radius:50%;background:#bbb;color:#333;cursor:pointer}:host():hover{background:#aeaeae}:host()>svg{height:10px;width:10px}:host()>svg>line{stroke-width:2px;stroke:#fff}`]\n})\nexport class NgxDropzoneRemoveBadgeComponent { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgxDropzonePreviewComponent } from '../ngx-dropzone-preview.component';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ngx-dropzone-video-preview',\n  template: `\n    <video *ngIf=\"sanitizedVideoSrc\" controls (click)=\"$event.stopPropagation()\">\n      <source [src]=\"sanitizedVideoSrc\" />\n    </video>\n    <ng-content select=\"ngx-dropzone-label\"></ng-content>\n    <ngx-dropzone-remove-badge *ngIf=\"removable\" (click)=\"_remove($event)\">\n    </ngx-dropzone-remove-badge>\n\t`,\n  styles: [`:host(){min-width:unset!important;max-width:unset!important;padding:0!important}:host():focus video,:host():hover video{opacity:.7}:host():focus ngx-dropzone-remove-badge,:host():hover ngx-dropzone-remove-badge{opacity:1}:host() ngx-dropzone-remove-badge{opacity:0}:host() video{max-height:100%;border-radius:5px}:host() ::ng-deep ngx-dropzone-label{position:absolute;overflow-wrap:break-word}`],\n  providers: [\n    {\n      provide: NgxDropzonePreviewComponent,\n      useExisting: NgxDropzoneVideoPreviewComponent\n    }\n  ]\n})\nexport class NgxDropzoneVideoPreviewComponent extends NgxDropzonePreviewComponent implements OnInit, OnDestroy {\n\n  constructor(\n    sanitizer: DomSanitizer\n  ) {\n    super(sanitizer);\n  }\n\n  /** The video data source. */\n  sanitizedVideoSrc: SafeUrl;\n\n  private videoSrc: string;\n\n  ngOnInit() {\n    if (!this.file) {\n      console.error('No file to read. Please provide a file using the [file] Input property.');\n      return;\n    }\n\n    /**\n     * We sanitize the URL here to enable the preview.\n     * Please note that this could cause security issues!\n     **/\n    this.videoSrc = URL.createObjectURL(this.file);\n    this.sanitizedVideoSrc = this.sanitizer.bypassSecurityTrustUrl(this.videoSrc);\n  }\n\n  ngOnDestroy() {\n    URL.revokeObjectURL(this.videoSrc);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDropzoneLabelDirective } from './ngx-dropzone-label.directive';\nimport { NgxDropzonePreviewComponent } from './ngx-dropzone-preview/ngx-dropzone-preview.component';\nimport { NgxDropzoneComponent } from './ngx-dropzone/ngx-dropzone.component';\nimport { NgxDropzoneImagePreviewComponent } from './ngx-dropzone-preview/ngx-dropzone-image-preview/ngx-dropzone-image-preview.component';\nimport { NgxDropzoneRemoveBadgeComponent } from './ngx-dropzone-preview/ngx-dropzone-remove-badge/ngx-dropzone-remove-badge.component';\nimport { NgxDropzoneVideoPreviewComponent } from './ngx-dropzone-preview/ngx-dropzone-video-preview/ngx-dropzone-video-preview.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tNgxDropzoneComponent,\n\t\tNgxDropzoneLabelDirective,\n\t\tNgxDropzonePreviewComponent,\n\t\tNgxDropzoneImagePreviewComponent,\n\t\tNgxDropzoneRemoveBadgeComponent,\n\t\tNgxDropzoneVideoPreviewComponent,\n\t],\n\texports: [\n\t\tNgxDropzoneComponent,\n\t\tNgxDropzoneLabelDirective,\n\t\tNgxDropzonePreviewComponent,\n\t\tNgxDropzoneImagePreviewComponent,\n\t\tNgxDropzoneRemoveBadgeComponent,\n\t\tNgxDropzoneVideoPreviewComponent,\n\t]\n})\nexport class NgxDropzoneModule { }\n"],"sourceRoot":"webpack:///"}