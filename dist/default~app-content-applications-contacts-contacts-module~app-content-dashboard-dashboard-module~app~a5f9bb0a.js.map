{"version":3,"sources":["@swimlane/ngx-datatable/lib/services/scrollbar-helper.service.ts","@swimlane/ngx-datatable/lib/services/dimensions-helper.service.ts","@swimlane/ngx-datatable/lib/services/column-changes.service.ts","@swimlane/ngx-datatable/lib/components/footer/footer-template.directive.ts","@swimlane/ngx-datatable/lib/directives/visibility.directive.ts","@swimlane/ngx-datatable/lib/directives/draggable.directive.ts","@swimlane/ngx-datatable/lib/events.ts","@swimlane/ngx-datatable/lib/directives/resizeable.directive.ts","@swimlane/ngx-datatable/lib/directives/orderable.directive.ts","@swimlane/ngx-datatable/lib/directives/long-press.directive.ts","@swimlane/ngx-datatable/lib/components/body/scroller.component.ts","@swimlane/ngx-datatable/lib/components/body/body-group-header-template.directive.ts","@swimlane/ngx-datatable/lib/components/body/body-group-header.directive.ts","@swimlane/ngx-datatable/lib/utils/column-prop-getters.ts","@swimlane/ngx-datatable/lib/utils/tree.ts","@swimlane/ngx-datatable/lib/utils/camel-case.ts","@swimlane/ngx-datatable/lib/utils/id.ts","@swimlane/ngx-datatable/lib/utils/column-helper.ts","@swimlane/ngx-datatable/lib/types/column-mode.type.ts","@swimlane/ngx-datatable/lib/types/selection.type.ts","@swimlane/ngx-datatable/lib/types/sort.type.ts","@swimlane/ngx-datatable/lib/types/contextmenu.type.ts","@swimlane/ngx-datatable/lib/components/columns/column-header.directive.ts","@swimlane/ngx-datatable/lib/components/columns/column-cell.directive.ts","@swimlane/ngx-datatable/lib/components/columns/tree.directive.ts","@swimlane/ngx-datatable/lib/components/columns/column.directive.ts","@swimlane/ngx-datatable/lib/components/row-detail/row-detail-template.directive.ts","@swimlane/ngx-datatable/lib/components/row-detail/row-detail.directive.ts","@swimlane/ngx-datatable/lib/components/footer/footer.directive.ts","@swimlane/ngx-datatable/lib/utils/column.ts","@swimlane/ngx-datatable/lib/utils/row-height-cache.ts","@swimlane/ngx-datatable/lib/utils/prefixes.ts","@swimlane/ngx-datatable/lib/utils/translate.ts","@swimlane/ngx-datatable/lib/components/body/body.component.ts","@swimlane/ngx-datatable/lib/components/header/header.component.ts","@swimlane/ngx-datatable/lib/utils/throttle.ts","@swimlane/ngx-datatable/lib/utils/math.ts","@swimlane/ngx-datatable/lib/types/sort-direction.type.ts","@swimlane/ngx-datatable/lib/utils/sort.ts","@swimlane/ngx-datatable/lib/components/datatable.component.ts","@swimlane/ngx-datatable/lib/components/header/header-cell.component.ts","@swimlane/ngx-datatable/lib/components/footer/footer.component.ts","@swimlane/ngx-datatable/lib/components/footer/pager.component.ts","@swimlane/ngx-datatable/lib/components/body/progress-bar.component.ts","@swimlane/ngx-datatable/lib/utils/keys.ts","@swimlane/ngx-datatable/lib/components/body/body-row.component.ts","@swimlane/ngx-datatable/lib/components/body/body-row-wrapper.component.ts","@swimlane/ngx-datatable/lib/components/body/body-cell.component.ts","@swimlane/ngx-datatable/lib/utils/selection.ts","@swimlane/ngx-datatable/lib/components/body/selection.component.ts","@swimlane/ngx-datatable/lib/components/body/summary/summary-row.component.ts","@swimlane/ngx-datatable/lib/ngx-datatable.module.ts","@swimlane/ngx-datatable/lib/types/click.type.ts","@swimlane/ngx-datatable/lib/types/table-column.type.ts","@swimlane/ngx-datatable/lib/types/sort-prop-dir.type.ts","@swimlane/ngx-datatable/lib/utils/elm-from-point.ts"],"names":["tslib_1.__decorate"],"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","file":"default~app-content-applications-contacts-contacts-module~app-content-dashboard-dashboard-module~app~a5f9bb0a.js","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class ScrollbarHelper {\n  width: number = this.getWidth();\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  getWidth(): number {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class DimensionsHelper {\n  getDimensions(element: Element): ClientRect {\n    return element.getBoundingClientRect();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n@Injectable()\nexport class ColumnChangesService {\n  private columnInputChanges = new Subject<undefined>();\n\n  get columnInputChanges$(): Observable<undefined> {\n    return this.columnInputChanges.asObservable();\n  }\n\n  onInputChange(): void {\n    this.columnInputChanges.next();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-footer-template]' })\nexport class DataTableFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibilityObserver]' })\nexport class VisibilityDirective implements OnInit, OnDestroy {\n  @HostBinding('class.visible')\n  isVisible: boolean = false;\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n\n  constructor(private element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.runCheck();\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n\n    this.timeout = setTimeout(() => check());\n  }\n}\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class DraggableDirective implements OnDestroy, OnChanges {\n  @Input() dragEventTarget: any;\n  @Input() dragModel: any;\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  isDragging: boolean = false;\n  subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (!this.isDragging) return;\n\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    // we only want to drag the inner header text\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\n\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\n\n      this.subscription.add(mouseMoveSub);\n\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\n    if (!this.isDragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    this.element.classList.add('dragging');\n\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","declare let global: any;\n\n/* tslint:disable */\nexport const MouseEvent = (((typeof window !== 'undefined' && window) as any) || (global as any))\n  .MouseEvent as MouseEvent;\nexport const KeyboardEvent = (((typeof window !== 'undefined' && window) as any) || (global as any))\n  .KeyboardEvent as KeyboardEvent;\nexport const Event = (((typeof window !== 'undefined' && window) as any) || (global as any)).Event as Event;\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  Renderer2\n} from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { MouseEvent } from '../events';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  subscription: Subscription;\n  resizing: boolean = false;\n  private resizeHandle: HTMLElement;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n\n  onMouseup(): void {\n    this.resizing = false;\n\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\n\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n  private _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  KeyValueDiffers,\n  AfterContentInit,\n  OnDestroy,\n  Inject\n} from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({ selector: '[orderable]' })\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DraggableDirective, { descendants: true })\n  draggables: QueryList<DraggableDirective>;\n\n  positions: any;\n  differ: any;\n  lastDraggingIndex: number;\n\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\n    this.differ = differs.find({}).create();\n  }\n\n  ngAfterContentInit(): void {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n\n  updateSubscriptions(): void {\n    const diffs = this.differ.diff(this.createMapDiffs());\n\n    if (diffs) {\n      const subscribe = ({ currentValue, previousValue }: any) => {\n        unsubscribe({ previousValue });\n\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n\n      const unsubscribe = ({ previousValue }: any) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n\n  onDragStart(): void {\n    this.positions = {};\n\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n\n  onDragging({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n\n  onDragEnd({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n\n  isTarget(model: any, event: any): any {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n\n      i++;\n    }\n  }\n\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPressDirective implements OnDestroy {\n  @Input() pressEnabled: boolean = true;\n  @Input() pressModel: any;\n  @Input() duration: number = 500;\n\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\n\n  pressing: boolean;\n  isLongPressing: boolean;\n  timeout: any;\n  mouseX: number = 0;\n  mouseY: number = 0;\n\n  subscription: Subscription;\n\n  @HostBinding('class.press')\n  get press(): boolean {\n    return this.pressing;\n  }\n\n  @HostBinding('class.longpress')\n  get isLongPress(): boolean {\n    return this.isLongPressing;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n\n    // don't start drag if its on resize handle\n    const target = <HTMLElement>event.target;\n    if (target.classList.contains('resize-handle')) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.isLongPressing = false;\n\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n\n      this.subscription.add(\n        fromEvent(document, 'mousemove')\n          .pipe(takeUntil(mouseup))\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\n      );\n\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event: MouseEvent): void {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress(): void {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n\n  onMouseup(): void {\n    this.endPress();\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-scroller',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    class: 'datatable-scroll'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollerComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean = false;\n  @Input() scrollbarH: boolean = false;\n\n  @HostBinding('style.height.px')\n  @Input()\n  scrollHeight: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  scrollWidth: number;\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  scrollYPos: number = 0;\n  scrollXPos: number = 0;\n  prevScrollYPos: number = 0;\n  prevScrollXPos: number = 0;\n  element: any;\n  parentElement: any;\n  onScrollListener: any;\n\n  private _scrollEventListener: any = null;\n\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n\n  setOffset(offsetY: number): void {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n\n  onScrolled(event: MouseEvent): void {\n    const dom: Element = <Element>event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n\n  updateOffset(): void {\n    let direction: string;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-group-header-template]'\n})\nexport class DatatableGroupHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\n\n@Directive({ selector: 'ngx-datatable-group-header' })\nexport class DatatableGroupHeaderDirective {\n  /**\n   * Row height is required when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Track toggling of group visibility\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group: any): void {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n\n  /**\n   * Expand all groups\n   */\n  expandAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { TableColumnProp } from '../types/table-column.type';\n\n// maybe rename this file to prop-getters.ts\n\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\n\n/**\n * Always returns the empty string ''\n */\nexport function emptyStringGetter(): string {\n  return '';\n}\n\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nexport function numericIndexGetter(row: any[], index: number): any {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nexport function shallowValueGetter(obj: any, fieldName: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nexport function deepValueGetter(obj: any, path: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  const split = path.split('.');\n\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n","import { getterForProp } from './column-prop-getters';\nimport { TableColumnProp } from '../types/table-column.type';\n\nexport type OptionalValueGetter = (row: any) => any | undefined;\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node: TreeNode | null = null;\n\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    let resolvedRows: any[] = [];\n    nodeById[0].flatten(function() {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nclass TreeNode {\n  public row: any;\n  public parent: any;\n  public children: any[];\n\n  constructor(row: any | null = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  flatten(f: any, recursive: boolean) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nexport function camelCase(str: string): string {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n    .trim()\n    .toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function(a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nexport function deCamelCase(str: string): string {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n","import { camelCase, deCamelCase } from './camel-case';\nimport { id } from './id';\nimport { getterForProp } from './column-prop-getters';\nimport { TableColumn } from '../types/table-column.type';\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\n\n/**\n * Sets the column defaults\n */\nexport function setColumnDefaults(columns: TableColumn[]) {\n  if (!columns) return;\n\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound: boolean = false;\n\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\n\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Translates templates definitions to objects\n */\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\n  const result: any[] = [];\n  for (const temp of templates) {\n    const col: any = {};\n\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n\n    result.push(col);\n  }\n\n  return result;\n}\n","export enum ColumnMode {\n  standard = 'standard',\n  flex = 'flex',\n  force = 'force'\n}\n","export enum SelectionType {\n  single = 'single',\n  multi = 'multi',\n  multiClick = 'multiClick',\n  cell = 'cell',\n  checkbox = 'checkbox'\n}\n","export enum SortType {\n  single = 'single',\n  multi = 'multi'\n}\n","export enum ContextmenuType {\n  header = 'header',\n  body = 'body'\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-header-template]' })\nexport class DataTableColumnHeaderDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-cell-template]' })\nexport class DataTableColumnCellDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\nexport class DataTableColumnCellTreeToggle {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\nimport { DataTableColumnCellDirective } from './column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\nimport { ColumnChangesService } from '../../services/column-changes.service';\nimport { TableColumnProp } from '../../types/table-column.type';\n\n@Directive({ selector: 'ngx-datatable-column' })\nexport class DataTableColumnDirective implements OnChanges {\n  @Input() name: string;\n  @Input() prop: TableColumnProp;\n  @Input() frozenLeft: any;\n  @Input() frozenRight: any;\n  @Input() flexGrow: number;\n  @Input() resizeable: boolean;\n  @Input() comparator: any;\n  @Input() pipe: any;\n  @Input() sortable: boolean;\n  @Input() draggable: boolean;\n  @Input() canAutoResize: boolean;\n  @Input() minWidth: number;\n  @Input() width: number;\n  @Input() maxWidth: number;\n  @Input() checkboxable: boolean;\n  @Input() headerCheckboxable: boolean;\n  @Input() headerClass: string | ((data: any) => string | any);\n  @Input() cellClass: string | ((data: any) => string | any);\n  @Input() isTreeColumn: boolean;\n  @Input() treeLevelIndent: number;\n  @Input() summaryFunc: (cells: any[]) => any;\n  @Input() summaryTemplate: TemplateRef<any>;\n\n  @Input('cellTemplate')\n  _cellTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\n  _cellTemplateQuery: TemplateRef<any>;\n\n  get cellTemplate(): TemplateRef<any> {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n\n  @Input('headerTemplate')\n  _headerTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\n  _headerTemplateQuery: TemplateRef<any>;\n\n  get headerTemplate(): TemplateRef<any> {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n\n  @Input('treeToggleTemplate')\n  _treeToggleTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\n  _treeToggleTemplateQuery: TemplateRef<any>;\n\n  get treeToggleTemplate(): TemplateRef<any> {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n\n  private isFirstChange = true;\n\n  constructor(private columnChangesService: ColumnChangesService) {}\n\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-row-detail-template]'\n})\nexport class DatatableRowDetailTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\n\n@Directive({ selector: 'ngx-datatable-row-detail' })\nexport class DatatableRowDetailDirective {\n  /**\n   * The detail row height is required especially\n   * when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Row detail row visbility was toggled.\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row: any): void {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\n\n@Directive({ selector: 'ngx-datatable-footer' })\nexport class DatatableFooterDirective {\n  @Input() footerHeight: number;\n  @Input() totalMessage: string;\n  @Input() selectedMessage: string | boolean;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef, static: false })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n}\n","/**\n * Returns the columns by pin.\n */\nexport function columnsByPin(cols: any[]) {\n  const ret: { left: any; center: any; right: any } = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n */\nexport function columnGroupWidths(groups: any, all: any) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnTotalWidth(columns: any[], prop?: string) {\n  let totalWidth = 0;\n\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnsTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\nexport function columnsByPinArr(val: any) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n\n  return colsByPinArr;\n}\n","/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nexport class RowHeightCache {\n  /**\n   * Tree Array stores the cumulative information of the row heights to perform efficient\n   * range queries and updates.  Currently the tree is initialized to the base row\n   * height instead of the detail row height.\n   */\n  private treeArray: number[] = [];\n\n  /**\n   * Clear the Tree array.\n   */\n  clearCache(): void {\n    this.treeArray = [];\n  }\n\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details: any): void {\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n\n      this.update(i, currentRowHeight);\n    }\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY: number): number {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex: number, byRowHeight: number): void {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex: number): number {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n\n    let sum = 0;\n    atIndex |= 0;\n\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & (atIndex + 1)) - 1;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA: number, atIndexB: number): number {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  private calcRowIndex(sum: number): number {\n    if (!this.treeArray.length) return 0;\n\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n\n    return pos + 1;\n  }\n}\n","import { camelCase } from './camel-case';\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function() {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match =\n    typeof styles !== 'undefined'\n      ? Array.prototype.slice\n          .call(styles)\n          .join('')\n          .match(/-(moz|webkit|ms)-/)\n      : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n\n  return dom\n    ? {\n        dom,\n        lowercase: pre,\n        css: `-${pre}-`,\n        js: pre[0].toUpperCase() + pre.substr(1)\n      }\n    : undefined;\n})();\n\nexport function getVendorPrefixedName(property: string) {\n  const name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camel-case';\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nexport function translateXY(styles: any, x: number, y: number) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { MouseEvent } from '../../events';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization))\n      this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent, { static: false }) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new Map();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    this.rowIndexes.clear();\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex((r) => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy, OnDestroy\n} from '@angular/core';\nimport { MouseEvent } from '../../events';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","/**\n * Throttle a function\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout: any = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function(this: any) {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { columnsByPin, columnsTotalWidth } from './column';\n\n/**\n * Calculates the Total Flex Grow\n */\nexport function getTotalFlexGrow(columns: any[]) {\n  let totalFlexGrow = 0;\n\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nexport function forceFillColumnWidths(\n  allColumns: any[],\n  expectedWidth: number,\n  startIdx: number,\n  allowBleed: boolean,\n  defaultColWidth: number = 300\n) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed: any[] = [];\n  const remainingWidthLimit = 1; // when to stop\n\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n\n      column.width = Math.max(0, column.width);\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\n  let contentWidth = 0;\n\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n\n  return contentWidth;\n}\n","export enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n","import { getterForProp } from './column-prop-getters';\nimport { SortType } from '../types/sort.type';\nimport { SortDirection } from '../types/sort-direction.type';\nimport { SortPropDir } from '../types/sort-prop-dir.type';\n/**\n * Gets the next sort direction\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map<any, number>();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n\n  return temp.sort(function(rowA: any, rowB: any) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const { prop, valueGetter } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison =\n        cachedDir.dir !== SortDirection.desc\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  ViewChild,\n  HostListener,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  AfterViewInit,\n  HostBinding,\n  ContentChild,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SkipSelf,\n  OnDestroy,\n  Optional,\n  Inject\n} from '@angular/core';\n\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\nimport { TableColumn } from '../types/table-column.type';\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\nimport { ColumnMode } from '../types/column-mode.type';\nimport { SelectionType } from '../types/selection.type';\nimport { SortType } from '../types/sort.type';\nimport { ContextmenuType } from '../types/contextmenu.type';\nimport { DataTableColumnDirective } from './columns/column.directive';\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\nimport { DatatableFooterDirective } from './footer/footer.directive';\nimport { DataTableBodyComponent } from './body/body.component';\nimport { DataTableHeaderComponent } from './header/header.component';\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\nimport { ColumnChangesService } from '../services/column-changes.service';\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\nimport { throttleable } from '../utils/throttle';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { sortRows } from '../utils/sort';\n\n@Component({\n  selector: 'ngx-datatable',\n  templateUrl: './datatable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datatable.component.scss'],\n  host: {\n    class: 'ngx-datatable'\n  }\n})\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\n  /**\n   * Template for the target marker of drag target columns.\n   */\n  @Input() targetMarkerTemplate: any;\n\n  /**\n   * Rows that are displayed in the table.\n   */\n  @Input() set rows(val: any) {\n    this._rows = val;\n\n    if (val) {\n      this._internalRows = [...val];\n    }\n\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // recalculate sizes/etc\n    this.recalculate();\n\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Gets the rows.\n   */\n  get rows(): any {\n    return this._rows;\n  }\n\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  @Input() set groupRowsBy(val: string) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n\n  /**\n   * This attribute allows the user to set a grouped array in the following format:\n   *  [\n   *    {groupid=1} [\n   *      {id=1 name=\"test1\"},\n   *      {id=2 name=\"test2\"},\n   *      {id=3 name=\"test3\"}\n   *    ]},\n   *    {groupid=2>[\n   *      {id=4 name=\"test4\"},\n   *      {id=5 name=\"test5\"},\n   *      {id=6 name=\"test6\"}\n   *    ]}\n   *  ]\n   */\n  @Input() groupedRows: any[];\n\n  /**\n   * Columns to be displayed.\n   */\n  @Input() set columns(val: TableColumn[]) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n\n    this._columns = val;\n  }\n\n  /**\n   * Get the columns.\n   */\n  get columns(): TableColumn[] {\n    return this._columns;\n  }\n\n  /**\n   * List of row objects that should be\n   * represented as selected in the grid.\n   * Default value: `[]`\n   */\n  @Input() selected: any[] = [];\n\n  /**\n   * Enable vertical scrollbars\n   */\n  @Input() scrollbarV: boolean = false;\n\n  /**\n   * Enable horz scrollbars\n   */\n  @Input() scrollbarH: boolean = false;\n\n  /**\n   * The row height; which is necessary\n   * to calculate the height for the lazy rendering.\n   */\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\n\n  /**\n   * Type of column width distribution formula.\n   * Example: flex, force, standard\n   */\n  @Input() columnMode: ColumnMode = ColumnMode.standard;\n\n  /**\n   * The minimum header height in pixels.\n   * Pass a falsey for no header\n   */\n  @Input() headerHeight: any = 30;\n\n  /**\n   * The minimum footer height in pixels.\n   * Pass falsey for no footer\n   */\n  @Input() footerHeight: number = 0;\n\n  /**\n   * If the table should use external paging\n   * otherwise its assumed that all data is preloaded.\n   */\n  @Input() externalPaging: boolean = false;\n\n  /**\n   * If the table should use external sorting or\n   * the built-in basic sorting.\n   */\n  @Input() externalSorting: boolean = false;\n\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  @Input() set limit(val: number | undefined) {\n    this._limit = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the limit.\n   */\n  get limit(): number | undefined {\n    return this._limit;\n  }\n\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  @Input() set count(val: number) {\n    this._count = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  @Input() set offset(val: number) {\n    this._offset = val;\n  }\n  get offset(): number {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n\n  /**\n   * Show the linear loading bar.\n   * Default value: `false`\n   */\n  @Input() loadingIndicator: boolean = false;\n\n  /**\n   * Type of row selection. Options are:\n   *\n   *  - `single`\n   *  - `multi`\n   *  - `checkbox`\n   *  - `multiClick`\n   *  - `cell`\n   *\n   * For no selection pass a `falsey`.\n   * Default value: `undefined`\n   */\n  @Input() selectionType: SelectionType;\n\n  /**\n   * Enable/Disable ability to re-order columns\n   * by dragging them.\n   */\n  @Input() reorderable: boolean = true;\n\n  /**\n   * Swap columns on re-order columns or\n   * move them.\n   */\n  @Input() swapColumns: boolean = true;\n\n  /**\n   * The type of sorting\n   */\n  @Input() sortType: SortType = SortType.single;\n\n  /**\n   * Array of sorted columns by property and type.\n   * Default value: `[]`\n   */\n  @Input() sorts: any[] = [];\n\n  /**\n   * Css class overrides\n   */\n  @Input() cssClasses: any = {\n    sortAscending: 'datatable-icon-up',\n    sortDescending: 'datatable-icon-down',\n    pagerLeftArrow: 'datatable-icon-left',\n    pagerRightArrow: 'datatable-icon-right',\n    pagerPrevious: 'datatable-icon-prev',\n    pagerNext: 'datatable-icon-skip'\n  };\n\n  /**\n   * Message overrides for localization\n   *\n   * emptyMessage     [default] = 'No data to display'\n   * totalMessage     [default] = 'total'\n   * selectedMessage  [default] = 'selected'\n   */\n  @Input() messages: any = {\n    // Message to show when array is presented\n    // but contains no values\n    emptyMessage: 'No data to display',\n\n    // Footer total message\n    totalMessage: 'total',\n\n    // Footer selected message\n    selectedMessage: 'selected'\n  };\n\n  /**\n   * Row specific classes.\n   * Similar implementation to ngClass.\n   *\n   *  [rowClass]=\"'first second'\"\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n   */\n  @Input() rowClass: any;\n\n  /**\n   * A boolean/function you can use to check whether you want\n   * to select a particular row based on a criteria. Example:\n   *\n   *    (selection) => {\n   *      return selection !== 'Ethel Price';\n   *    }\n   */\n  @Input() selectCheck: any;\n\n  /**\n   * A function you can use to check whether you want\n   * to show the checkbox for a particular row based on a criteria. Example:\n   *\n   *    (row, column, value) => {\n   *      return row.name !== 'Ethel Price';\n   *    }\n   */\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\n\n  /**\n   * A boolean you can use to set the detault behaviour of rows and groups\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\n   *\n   */\n  @Input() groupExpansionDefault: boolean = false;\n\n  /**\n   * Property to which you can use for custom tracking of rows.\n   * Example: 'name'\n   */\n  @Input() trackByProp: string;\n\n  /**\n   * Property to which you can use for determining select all\n   * rows on current page or not.\n   *\n   * @memberOf DatatableComponent\n   */\n  @Input() selectAllRowsOnPage = false;\n\n  /**\n   * A flag for row virtualization on / off\n   */\n  @Input() virtualization: boolean = true;\n\n  /**\n   * Tree from relation\n   */\n  @Input() treeFromRelation: string;\n\n  /**\n   * Tree to relation\n   */\n  @Input() treeToRelation: string;\n\n  /**\n   * A flag for switching summary row on / off\n   */\n  @Input() summaryRow: boolean = false;\n\n  /**\n   * A height of summary row\n   */\n  @Input() summaryHeight: number = 30;\n\n  /**\n   * A property holds a summary row position: top/bottom\n   */\n  @Input() summaryPosition: string = 'top';\n\n  /**\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\n   */\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was focused via keyboard or mouse click.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was selected.\n   */\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column sort was invoked.\n   */\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The table was paged either triggered by the pager or the body scroll.\n   */\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Columns were re-ordered.\n   */\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column was resized.\n   */\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The context menu was invoked on the table.\n   * type indicates whether the header or the body was clicked.\n   * content contains either the column or the row that was clicked.\n   */\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\n\n  /**\n   * A row was expanded ot collapsed for tree\n   */\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  @HostBinding('class.fixed-header')\n  get isFixedHeader(): boolean {\n    const headerHeight: number | string = this.headerHeight;\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\n  }\n\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  @HostBinding('class.fixed-row')\n  get isFixedRow(): boolean {\n    return this.rowHeight !== 'auto';\n  }\n\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll(): boolean {\n    return this.scrollbarV;\n  }\n\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  @HostBinding('class.virtualized')\n  get isVirtualized(): boolean {\n    return this.virtualization;\n  }\n\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  @HostBinding('class.scroll-horz')\n  get isHorScroll(): boolean {\n    return this.scrollbarH;\n  }\n\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  @HostBinding('class.selectable')\n  get isSelectable(): boolean {\n    return this.selectionType !== undefined;\n  }\n\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  @HostBinding('class.checkbox-selection')\n  get isCheckboxSelection(): boolean {\n    return this.selectionType === SelectionType.checkbox;\n  }\n\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  @HostBinding('class.cell-selection')\n  get isCellSelection(): boolean {\n    return this.selectionType === SelectionType.cell;\n  }\n\n  /**\n   * CSS class applied to root if single select.\n   */\n  @HostBinding('class.single-selection')\n  get isSingleSelection(): boolean {\n    return this.selectionType === SelectionType.single;\n  }\n\n  /**\n   * CSS class added to root element if mulit select\n   */\n  @HostBinding('class.multi-selection')\n  get isMultiSelection(): boolean {\n    return this.selectionType === SelectionType.multi;\n  }\n\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  @HostBinding('class.multi-click-selection')\n  get isMultiClickSelection(): boolean {\n    return this.selectionType === SelectionType.multiClick;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  /**\n   * Row Detail templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableRowDetailDirective, { static: false })\n  rowDetail: DatatableRowDetailDirective;\n\n  /**\n   * Group Header templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableGroupHeaderDirective, { static: false })\n  groupHeader: DatatableGroupHeaderDirective;\n\n  /**\n   * Footer template gathered from the ContentChild\n   */\n  @ContentChild(DatatableFooterDirective, { static: false })\n  footer: DatatableFooterDirective;\n\n  /**\n   * Reference to the body component for manually\n   * invoking functions on the body.\n   */\n  @ViewChild(DataTableBodyComponent, { static: false })\n  bodyComponent: DataTableBodyComponent;\n\n  /**\n   * Reference to the header component for manually\n   * invoking functions on the header.\n   *\n   * @memberOf DatatableComponent\n   */\n  @ViewChild(DataTableHeaderComponent, { static: false })\n  headerComponent: DataTableHeaderComponent;\n\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected(): boolean {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n    if (this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n\n  element: HTMLElement;\n  _innerWidth: number;\n  pageSize: number;\n  bodyHeight: number;\n  rowCount: number = 0;\n  rowDiffer: KeyValueDiffer<{}, {}>;\n\n  _offsetX = new BehaviorSubject(0);\n  _limit: number | undefined;\n  _count: number = 0;\n  _offset: number = 0;\n  _rows: any[];\n  _groupRowsBy: string;\n  _internalRows: any[];\n  _internalColumns: TableColumn[];\n  _columns: TableColumn[];\n  _columnTemplates: QueryList<DataTableColumnDirective>;\n  _subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef,\n    differs: KeyValueDiffers,\n    private columnChangesService: ColumnChangesService,\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\n  ) {\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = { ...this.configuration.messages };\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit(): void {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit(): void {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      this.recalculate();\n\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n\n  /**\n   * This will be used when displaying or selecting rows.\n   * when tracking/comparing them, we'll use the value of this fn,\n   *\n   * (`fn(x) === fn(y)` instead of `x === y`)\n   */\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\n    if (this._groupRowsBy) {\n      // each group in groupedRows are stored as {key, value: [rows]},\n      // where key is the groupRowsBy index\n      return x.key;\n    } else {\n      return x;\n    }\n  };\n\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val: any) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray: any, groupBy: any) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i: number = 0;\n\n    originalArray.forEach((item: any) => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n\n    const addGroup = (key: any, value: any) => {\n      return { key, value };\n    };\n\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(\n        this._internalRows,\n        optionalGetterForProp(this.treeFromRelation),\n        optionalGetterForProp(this.treeToRelation)\n      );\n\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate(): void {\n    this.recalculateDims();\n    this.recalculateColumns();\n  }\n\n  /**\n   * Window resize handler to update sizes.\n   */\n  @HostListener('window:resize')\n  @throttleable(5)\n  onWindowResize(): void {\n    this.recalculate();\n  }\n\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(\n    columns: any[] = this._internalColumns,\n    forceIdx: number = -1,\n    allowBleed: boolean = this.scrollbarH\n  ): any[] | undefined {\n    if (!columns) return undefined;\n\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims(): void {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n\n    this.recalculatePages();\n  }\n\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages(): void {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({ offset }: any): void {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n\n    this.offset = offset;\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event: MouseEvent): void {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event: any) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val: any[] = this.rows): number {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\n      return Math.max(size, 0);\n    }\n\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n\n    // other empty :(\n    return 0;\n  }\n\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val: any[] = this.rows): number {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n\n    return this.count;\n  }\n\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({ event, column }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n  }\n\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({ event, row }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n  }\n\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({ column, newValue }: any): void {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n\n    let idx: number;\n    const cols = this._internalColumns.map((c, i) => {\n      c = { ...c };\n\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n\n      return c;\n    });\n\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({ column, newValue, prevValue }: any): void {\n    const cols = this._internalColumns.map(c => {\n      return { ...c };\n    });\n\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n\n    this._internalColumns = cols;\n\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event: any): void {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n\n    this.sorts = event.sorts;\n\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event: any): void {\n    if (this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n\n      // remove all existing either way\n      this.selected = [];\n\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event: any) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({ row, rowIndex });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  private listenForColumnInputChanges(): void {\n    this._subscriptions.push(\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\n        if (this.columnTemplates) {\n          this.columnTemplates.notifyOnChanges();\n        }\n      })\n    );\n  }\n\n  private sortInternalRows(): void {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\n","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { MouseEvent } from '../../events';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { TableColumn } from '../../types/table-column.type';\nimport { nextSortDir } from '../../utils/sort';\nimport { SortDirection } from '../../types/sort-direction.type';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header-cell'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderCellComponent {\n  @Input() sortType: SortType;\n  @Input() sortAscendingIcon: string;\n  @Input() sortDescendingIcon: string;\n\n  @Input() isTarget: boolean;\n  @Input() targetMarkerTemplate: any;\n  @Input() targetMarkerContext: any;\n\n  _allRowsSelected: boolean;\n\n  @Input() set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n\n  @Input() selectionType: SelectionType;\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  headerHeight: number;\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-header-cell';\n\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n\n    return cls;\n  }\n\n  @HostBinding('attr.title')\n  get name(): string {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  get isCheckboxable(): boolean {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n\n  sortFn = this.onSort.bind(this);\n  sortClass: string;\n  sortDir: SortDirection;\n  selectFn = this.select.emit.bind(this.select);\n\n  cellContext: any = {\n    column: this.column,\n    sortDir: this.sortDir,\n    sortFn: this.sortFn,\n    allRowsSelected: this.allRowsSelected,\n    selectFn: this.selectFn\n  };\n\n  private _column: TableColumn;\n  private _sorts: any[];\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.columnContextmenu.emit({ event: $event, column: this.column });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (sorts && this.column) {\n      const sort = sorts.find((s: any) => {\n        return s.prop === this.column.prop;\n      });\n\n      if (sort) return sort.dir;\n    }\n  }\n\n  onSort(): void {\n    if (!this.column.sortable) return;\n\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n\n  calcSortClass(sortDir: SortDirection): string {\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn`;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input, TemplateRef } from '@angular/core';\nimport { DatatableFooterDirective } from './footer.directive';\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n  host: {\n    class: 'datatable-footer'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableFooterComponent {\n  @Input() footerHeight: number;\n  @Input() rowCount: number;\n  @Input() pageSize: number;\n  @Input() offset: number;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() totalMessage: string;\n  @Input() footerTemplate: DatatableFooterDirective;\n\n  @Input() selectedCount: number = 0;\n  @Input() selectedMessage: string | boolean;\n\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  get isVisible(): boolean {\n    return this.rowCount / this.pageSize > 1;\n  }\n\n  get curPage(): number {\n    return this.offset + 1;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n  host: {\n    class: 'datatable-pager'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTablePagerComponent {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  _count: number = 0;\n  _page: number = 1;\n  _size: number = 0;\n  pages: any;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n\n      this.change.emit({\n        page\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27,\n  left = 37,\n  right = 39\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style.width.px')\n  get columnsTotalWidths(): string {\n    return this._columnGroupWidths.total;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  DoCheck,\n  ChangeDetectionStrategy,\n  KeyValueDiffer,\n  ChangeDetectorRef,\n  KeyValueDiffers\n} from '@angular/core';\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-row-wrapper',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || (!groupHeader || !groupHeader.template)\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n  host: {\n    class: 'datatable-row-wrapper'\n  }\n})\nexport class DataTableRowWrapperComponent implements DoCheck {\n  @Input() innerWidth: number;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() offsetX: number;\n  @Input() detailRowHeight: any;\n  @Input() row: any;\n  @Input() groupedRows: any;\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  groupContext: any = {\n    group: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  rowContext: any = {\n    row: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  private rowDiffer: KeyValueDiffer<{}, {}>;\n  private _expanded: boolean = false;\n  private _rowIndex: number;\n\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.rowContextmenu.emit({ event: $event, row: this.row });\n  }\n\n  getGroupHeaderStyle(): any {\n    const styles = {};\n\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n\n    return styles;\n  }\n}\n","import {\n  Component,\n  Input,\n  PipeTransform,\n  HostBinding,\n  ViewChild,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy,\n  DoCheck,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { TableColumn } from '../../types/table-column.type';\nimport { MouseEvent, KeyboardEvent } from '../../events';\nimport { SortDirection } from '../../types/sort-direction.type';\nimport { Keys } from '../../utils/keys';\n\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\n\n@Component({\n  selector: 'datatable-body-cell',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n})\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n\n  @Input() set group(group: any) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  @Input() set rowHeight(val: number) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowHeight() {\n    return this._rowHeight;\n  }\n\n  @Input() set isSelected(val: boolean) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @Input() set row(row: any) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get row(): any {\n    return this._row;\n  }\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Input() set treeStatus(status: TreeStatus) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get treeStatus(): TreeStatus {\n    return this._treeStatus;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\n  cellTemplate: ViewContainerRef;\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.height')\n  get height(): string | number {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n\n  sanitizedValue: any;\n  value: any;\n  sortDir: SortDirection;\n  isFocused = false;\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n  activateFn = this.activate.emit.bind(this.activate);\n\n  cellContext: any = {\n    onCheckboxChangeFn: this.onCheckboxChangeFn,\n    activateFn: this.activateFn,\n    row: this.row,\n    group: this.group,\n    value: this.value,\n    column: this.column,\n    rowHeight: this.rowHeight,\n    isSelected: this.isSelected,\n    rowIndex: this.rowIndex,\n    treeStatus: this.treeStatus,\n    onTreeAction: this.onTreeAction.bind(this)\n  };\n\n  private _isSelected: boolean;\n  private _sorts: any[];\n  private _column: TableColumn;\n  private _row: any;\n  private _group: any;\n  private _rowHeight: number;\n  private _rowIndex: number;\n  private _expanded: boolean;\n  private _element: any;\n  private _treeStatus: TreeStatus;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this._element = element.nativeElement;\n  }\n\n  ngDoCheck(): void {\n    this.checkValueUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n\n  checkValueUpdates(): void {\n    let value = '';\n\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe: PipeTransform = this.column.pipe;\n\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n\n  onCheckboxChange(event: any): void {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (!sorts) {\n      return;\n    }\n\n    const sort = sorts.find((s: any) => {\n      return s.prop === this.column.prop;\n    });\n\n    if (sort) {\n      return sort.dir;\n    }\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n\n  calcLeftMargin(column: any, row: any) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\n","export function selectRows(selected: any[], row: any, comparefn: any) {\n  const selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(\n  selected: any[],\n  rows: any[],\n  index: number,\n  prevIndex: number,\n  comparefn: any\n): any[] {\n  const reverse = index < prevIndex;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if ((reverse && lesser) || (!reverse && greater)) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionType } from '../../types/selection.type';\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\nimport { Keys } from '../../utils/keys';\n\nexport interface Model {\n  type: string;\n  event: MouseEvent | KeyboardEvent;\n  row: any;\n  rowElement: any;\n  cellElement: any;\n  cellIndex: number;\n}\n\n@Component({\n  selector: 'datatable-selection',\n  template: `\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableSelectionComponent {\n  @Input() rows: any[];\n  @Input() selected: any[];\n  @Input() selectEnabled: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() rowIdentity: any;\n  @Input() selectCheck: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  prevIndex: number;\n\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\n    if (!this.selectEnabled) return;\n\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected: any[] = [];\n\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    this.prevIndex = index;\n\n    this.select.emit({\n      selected\n    });\n  }\n\n  onActivate(model: Model, index: number): void {\n    const { type, event, row } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n\n  onKeyboardFocus(model: Model): void {\n    const { keyCode } = <KeyboardEvent>model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n\n  focusRow(rowElement: any, keyCode: number): void {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n\n  getPrevNextRow(rowElement: any, keyCode: number): any {\n    const parentElement = rowElement.parentElement;\n\n    if (parentElement) {\n      let focusElement: HTMLElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\n    let nextCellElement: HTMLElement;\n\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n\n    if (nextCellElement) nextCellElement.focus();\n  }\n\n  getRowSelected(row: any): boolean {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n\n  getRowSelectedIdx(row: any, selected: any[]): number {\n    if (!selected || !selected.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\n\nexport interface ISummaryColumn {\n  summaryFunc?: (cells: any[]) => any;\n  summaryTemplate?: TemplateRef<any>;\n\n  prop: string;\n  pipe?: PipeTransform;\n}\n\nfunction defaultSumFunc(cells: any[]): any {\n  const cellsWithValues = cells.filter(cell => !!cell);\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\n\nfunction noopSumFunc(cells: any[]): void {\n  return null;\n}\n\n@Component({\n  selector: 'datatable-summary-row',\n  template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n  host: {\n    class: 'datatable-summary-row'\n  }\n})\nexport class DataTableSummaryRowComponent implements OnChanges {\n  @Input() rows: any[];\n  @Input() columns: ISummaryColumn[];\n\n  @Input() rowHeight: number;\n  @Input() offsetX: number;\n  @Input() innerWidth: number;\n\n  _internalColumns: ISummaryColumn[];\n  summaryRow: any = {};\n\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n\n  private updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n\n  private updateValues() {\n    this.summaryRow = {};\n\n    this.columns\n      .filter(col => !col.summaryTemplate)\n      .forEach(col => {\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n        const sumFunc = this.getSummaryFunction(col);\n\n        this.summaryRow[col.prop] = col.pipe\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n          : sumFunc(cellsFromSingleColumn);\n      });\n  }\n\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\nimport { DimensionsHelper } from './services/dimensions-helper.service';\nimport { ColumnChangesService } from './services/column-changes.service';\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { ResizeableDirective } from './directives/resizeable.directive';\nimport { OrderableDirective } from './directives/orderable.directive';\nimport { LongPressDirective } from './directives/long-press.directive';\nimport { ScrollerComponent } from './components/body/scroller.component';\nimport { DatatableComponent } from './components/datatable.component';\nimport { DataTableColumnDirective } from './components/columns/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\nimport { DataTableBodyComponent } from './components/body/body.component';\nimport { DataTableFooterComponent } from './components/footer/footer.component';\nimport { DataTablePagerComponent } from './components/footer/pager.component';\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\nimport { DataTableSelectionComponent } from './components/body/selection.component';\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  declarations: [\n    DataTableFooterTemplateDirective,\n    VisibilityDirective,\n    DraggableDirective,\n    ResizeableDirective,\n    OrderableDirective,\n    LongPressDirective,\n    ScrollerComponent,\n    DatatableComponent,\n    DataTableColumnDirective,\n    DataTableHeaderComponent,\n    DataTableHeaderCellComponent,\n    DataTableBodyComponent,\n    DataTableFooterComponent,\n    DataTablePagerComponent,\n    ProgressBarComponent,\n    DataTableBodyRowComponent,\n    DataTableRowWrapperComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableBodyCellComponent,\n    DataTableSelectionComponent,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DatatableFooterDirective,\n    DatatableGroupHeaderTemplateDirective,\n    DataTableSummaryRowComponent\n  ],\n  exports: [\n    DatatableComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DataTableFooterTemplateDirective,\n    DatatableFooterDirective,\n    DataTablePagerComponent,\n    DatatableGroupHeaderTemplateDirective\n  ]\n})\nexport class NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{ provide: 'configuration', useValue: configuration }]\n    };\n  }\n}\n\n/**\n * Interface definition for INgxDatatableConfig global configuration\n */\nexport interface INgxDatatableConfig {\n  messages: {\n    emptyMessage: string; // Message to show when array is presented, but contains no values\n    totalMessage: string; // Footer total message\n    selectedMessage: string; // Footer selected message\n  };\n}\n","export enum ClickType {\n  single = 'single',\n  double = 'double'\n}\n","import { PipeTransform } from '@angular/core';\nimport { ValueGetter } from '../utils/column-prop-getters';\n\n/**\n * Column property that indicates how to retrieve this column's\n * value from a row.\n * 'a.deep.value', 'normalprop', 0 (numeric)\n */\nexport type TableColumnProp = string | number;\n\n/**\n * Column Type\n */\nexport interface TableColumn {\n  /**\n   * Internal unique id\n   *\n   * @memberOf TableColumn\n   */\n  $$id?: string;\n\n  /**\n   * Internal for column width distributions\n   *\n   * @memberOf TableColumn\n   */\n  $$oldWidth?: number;\n\n  /**\n   * Internal for setColumnDefaults\n   *\n   * @memberOf TableColumn\n   */\n  $$valueGetter?: ValueGetter;\n\n  /**\n   * Determines if column is checkbox\n   *\n   * @memberOf TableColumn\n   */\n  checkboxable?: boolean;\n\n  /**\n   * Determines if the column is frozen to the left\n   *\n   * @memberOf TableColumn\n   */\n  frozenLeft?: boolean;\n\n  /**\n   * Determines if the column is frozen to the right\n   *\n   * @memberOf TableColumn\n   */\n  frozenRight?: boolean;\n\n  /**\n   * The grow factor relative to other columns. Same as the flex-grow\n   * API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n   * take any available extra width and distribute it proportionally\n   * according to all columns' flexGrow values.\n   *\n   * @memberOf TableColumn\n   */\n  flexGrow?: number;\n\n  /**\n   * Min width of the column\n   *\n   * @memberOf TableColumn\n   */\n  minWidth?: number;\n\n  /**\n   * Max width of the column\n   *\n   * @memberOf TableColumn\n   */\n  maxWidth?: number;\n\n  /**\n   * The default width of the column, in pixels\n   *\n   * @memberOf TableColumn\n   */\n  width?: number;\n\n  /**\n   * Can the column be resized\n   *\n   * @memberOf TableColumn\n   */\n  resizeable?: boolean;\n\n  /**\n   * Custom sort comparator\n   *\n   * @memberOf TableColumn\n   */\n  comparator?: any;\n\n  /**\n   * Custom pipe transforms\n   *\n   * @memberOf TableColumn\n   */\n  pipe?: PipeTransform;\n\n  /**\n   * Can the column be sorted\n   *\n   * @memberOf TableColumn\n   */\n  sortable?: boolean;\n\n  /**\n   * Can the column be re-arranged by dragging\n   *\n   * @memberOf TableColumn\n   */\n  draggable?: boolean;\n\n  /**\n   * Whether the column can automatically resize to fill space in the table.\n   *\n   * @memberOf TableColumn\n   */\n  canAutoResize?: boolean;\n\n  /**\n   * Column name or label\n   *\n   * @memberOf TableColumn\n   */\n  name?: string;\n\n  /**\n   * Property to bind to the row. Example:\n   *\n   * `someField` or `some.field.nested`, 0 (numeric)\n   *\n   * If left blank, will use the name as camel case conversion\n   *\n   * @memberOf TableColumn\n   */\n  prop?: TableColumnProp;\n\n  /**\n   * Cell template ref\n   *\n   * @memberOf TableColumn\n   */\n  cellTemplate?: any;\n\n  /**\n   * Header template ref\n   *\n   * @memberOf TableColumn\n   */\n  headerTemplate?: any;\n\n  /**\n   * Tree toggle template ref\n   *\n   * @memberOf TableColumn\n   */\n  treeToggleTemplate?: any;\n\n  /**\n   * CSS Classes for the cell\n   *\n   *\n   * @memberOf TableColumn\n   */\n  cellClass?: string | ((data: any) => string | any);\n\n  /**\n   * CSS classes for the header\n   *\n   *\n   * @memberOf TableColumn\n   */\n  headerClass?: string | ((data: any) => string | any);\n\n  /**\n   * Header checkbox enabled\n   *\n   * @memberOf TableColumn\n   */\n  headerCheckboxable?: boolean;\n\n  /**\n   * Is tree displayed on this column\n   *\n   * @memberOf TableColumn\n   */\n  isTreeColumn?: boolean;\n\n  /**\n   * Width of the tree level indent\n   *\n   * @memberOf TableColumn\n   */\n  treeLevelIndent?: number;\n\n  /**\n   * Summary function\n   *\n   * @memberOf TableColumn\n   */\n  summaryFunc?: (cells: any[]) => any;\n\n  /**\n   * Summary cell template ref\n   *\n   * @memberOf TableColumn\n   */\n  summaryTemplate?: any;\n}\n","import { SortDirection } from './sort-direction.type';\nimport { TableColumnProp } from './table-column.type';\n\nexport interface SortPropDir {\n  dir: SortDirection;\n  prop: TableColumnProp;\n}\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nexport function elementsFromPoint(x: number, y: number) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n\n  //if (document === undefined) return elements;\n\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n"],"sourceRoot":"webpack:///"}