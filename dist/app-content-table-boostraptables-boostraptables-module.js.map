{"version":3,"sources":["./src/app/content/table/boostraptables/basictable/basictable.component.ts","./src/app/content/table/boostraptables/basictable/basictable.component.html","./src/app/content/table/boostraptables/tablesizing/tablesizing.component.ts","./src/app/content/table/boostraptables/tablesizing/tablesizing.component.html","./src/app/content/table/boostraptables/tableborder/tableborder.component.ts","./src/app/content/table/boostraptables/tableborder/tableborder.component.html","./src/app/content/table/boostraptables/tablestyling/tablestyling.component.ts","./src/app/content/table/boostraptables/tablestyling/tablestyling.component.html","./src/app/_services/country.service.ts","./src/app/content/table/boostraptables/ngxboostraptables/countries.ts","./src/app/content/table/boostraptables/tablecomponents/tablecomponents.component.ts","./src/app/content/table/boostraptables/tablecomponents/tablecomponents.component.html","./src/app/content/table/boostraptables/ngxboostraptables/ngxboostraptables.component.ts","./src/app/content/table/boostraptables/ngxboostraptables/ngxboostraptables.component.html","./src/app/content/table/boostraptables/boostraptables.module.ts"],"names":[],"mappings":"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","file":"app-content-table-boostraptables-boostraptables-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgBlockUI, BlockUI } from 'ng-block-ui';\r\nimport { TableApiService } from 'src/app/_services/table-api.service';\r\n\r\n@Component({\r\n  selector: 'app-basictable',\r\n  templateUrl: './basictable.component.html',\r\n  styleUrls: ['./basictable.component.css']\r\n})\r\nexport class BasictableComponent implements OnInit {\r\n  BasictableData: any;\r\n  countries: any;\r\n  // public COUNTRIES = this.BasictableData.rows;\r\n  // countries = this.COUNTRIES;\r\n  @BlockUI('basicTables') blockUIBasicTables: NgBlockUI;\r\n  @BlockUI('inverseTable') blockUIInverseTable: NgBlockUI;\r\n\r\n   options = {\r\n    close: true,\r\n    expand: true,\r\n    minimize: true,\r\n    reload: true\r\n  };\r\n  loadingIndicator: true;\r\n  public breadcrumb: any;\r\n\r\n  constructor(private tableApiservice: TableApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.breadcrumb = {\r\n      mainlabel: 'Basic Tables',\r\n      links: [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/sales'\r\n        },\r\n        {\r\n          'name': 'Tables',\r\n          'isLink': true,\r\n          'link': '#'\r\n        },\r\n        {\r\n          'name': 'Basic Tables',\r\n          'isLink': false\r\n        }\r\n      ]\r\n    };\r\n      this.tableApiservice.getBasicTableData().subscribe(Response => {\r\n      this.BasictableData = Response;\r\n      this.getTabledata();\r\n      });\r\n  }\r\n  getTabledata() {\r\n    this.countries = this.BasictableData.rows;\r\n  }\r\n  reloadBasicTables() {\r\n    this.blockUIBasicTables.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIBasicTables.stop();\r\n    }, 2500);\r\n  }\r\n\r\n  reloadInverseTable() {\r\n    this.blockUIInverseTable.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIInverseTable.stop();\r\n    }, 2500);\r\n  }\r\n\r\n}\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-sm-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <!-- Basic Tables start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'basicTables'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Basic table</h4>\r\n                  </div>\r\n                 <div class=\"card-body\">\r\n                <p class=\"card-text\">Using the most basic table markup, here’s how <code>.table</code>-based tables\r\n                look in Bootstrap. You can use any example of below table for your table and it can be use with\r\n                any type of ng-bootstrap tables. </p>\r\n\r\n              <p><span class=\"text-bold-600\">Example 1:</span> Table with outer spacing</p>\r\n            </div>\r\n              <div class=\"table-responsive card-body\">\r\n               <table class=\"table\">\r\n                <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Firstname</th>\r\n                  <th scope=\"col\">Lastname</th>\r\n                  <th scope=\"col\">Username</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr *ngFor=\"let country of countries; index as i\">\r\n                  <th scope=\"row\">{{ i + 1 }}</th>\r\n                  <td>{{ country.firstname }} </td>\r\n                  <td>{{ country.lastname }}</td>\r\n                  <td>{{ country.username }}</td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n              </div>\r\n              <p class =\"px-1\"><span class=\"text-bold-600\">Example 2:</span> Minimal Table with no outer spacing.</p>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table mb-0\">\r\n                 <thead>\r\n                 <tr>\r\n                   <th scope=\"col\">#</th>\r\n                   <th scope=\"col\">Firstname</th>\r\n                   <th scope=\"col\">Lastname</th>\r\n                   <th scope=\"col\">Username</th>\r\n                 </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                 <tr *ngFor=\"let country of countries; index as i\">\r\n                   <th scope=\"row\">{{ i + 1 }}</th>\r\n                   <td>{{ country.firstname }} </td>\r\n                   <td>{{ country.lastname }}</td>\r\n                   <td>{{ country.username }}</td>\r\n                 </tr>\r\n                 </tbody>\r\n               </table>\r\n               </div>\r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <!------Basic table end--->\r\n      <!-----inverse table start-->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'inverseTable'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Inverse table</h4>\r\n                  </div>\r\n                 <div class=\"card-body\">\r\n              <p class=\"card-text\">You can also invert the colors—with light text on dark backgrounds—with\r\n                <code>.table-inverse.</code></p>\r\n                 </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-inverse mb-0\">\r\n                   <thead>\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n           </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Inverse table with info background</h4>\r\n                  </div>\r\n                 <div class=\"card-body\">\r\n              <p class=\"card-text\">You can also invert the colors—with light text on dark backgrounds—with <code>.bg-info </code>,\r\n               <code> .bg-success </code>,  <code>.bg-warning</code> and  <code>.bg-danger</code> classes.\r\n\r\n                <br><br>To set the light background color use<code> .bg-[color] </code>class where [color] is the value of your\r\n                selected color from modern color palette. So for teal color background class will be .bg-teal. Refer\r\n                HTML markup line no 1. Background color class is a optional if you don't it will take white background\r\n                default.\r\n\r\n                <br><br>To set the selected background color lighten use <code>.bg-lighten-[*]</code> class where [*] is the value\r\n                between '1-5' of your selected lighten color from modern color palette. So for color lighten 4\r\n                background class will be <code>.bg-lighten-4.</code> Refer HTML markup line no 1. Background lighten color class is a\r\n                optional if you don't it will take white background default.</p>\r\n                 </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-striped bg-info mb-0 white \">\r\n                   <thead>\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n            </div>\r\n      </div>\r\n      </div>\r\n      <!-- Table head options  start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Table head options</h4>\r\n                  </div>\r\n                 <div class=\"card-body\">\r\n              <p>Similar to default and inverse tables, use one of two modifier classes <code\r\n                  class=\"highlighter-rouge\">.thead-default</code>\r\n                or <code class=\"highlighter-rouge\">.thead-inverse</code> to make <code\r\n                  class=\"highlighter-rouge\">&lt;thead&gt;</code>s\r\n                appear light or dark gray.</p>\r\n                 </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                   <thead class= \"thead-dark\">\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                   <thead class=\"thead-light\">\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- Table head options end -->\r\n\r\n      <!-- Table head options with primary background start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Table head options with primary background</h4>\r\n                  </div>\r\n                 <div class=\"card-body\">\r\n              <p>Use background classes <code class=\"highlighter-rouge\">bg-*</code> to make custom\r\n                <code class=\"highlighter-rouge\">thead</code>\r\n                background. You can also use Modern Admin color palette classes for background.</p>\r\n              </div>\r\n                <div class=\"table\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                     <thead class=\"bg-primary white\">\r\n                     <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Firstname</th>\r\n                       <th scope=\"col\">Lastname</th>\r\n                       <th scope=\"col\">Username</th>\r\n                     </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                     <tr *ngFor=\"let country of countries; index as i\">\r\n                       <th scope=\"row\">{{ i + 1 }}</th>\r\n                       <td>{{ country.firstname }} </td>\r\n                       <td>{{ country.lastname }}</td>\r\n                       <td>{{ country.username }}</td>\r\n                     </tr>\r\n                     </tbody>\r\n                   </table>\r\n                   </div>\r\n\r\n                </div>\r\n              <div class=\"lighten-4\">\r\n                <div class=\"table\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                     <thead class=\"bg-teal bg-lighten-4\">\r\n                     <tr>\r\n                       <th scope=\"col\">#</th>\r\n                       <th scope=\"col\">Firstname</th>\r\n                       <th scope=\"col\">Lastname</th>\r\n                       <th scope=\"col\">Username</th>\r\n                     </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                     <tr *ngFor=\"let country of countries; index as i\">\r\n                       <th scope=\"row\">{{ i + 1 }}</th>\r\n                       <td>{{ country.firstname }} </td>\r\n                       <td>{{ country.lastname }}</td>\r\n                       <td>{{ country.username }}</td>\r\n                     </tr>\r\n                     </tbody>\r\n                   </table>\r\n                   </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n         </div>\r\n      </div>\r\n      </div>\r\n      <!-- Table head options with primary background end -->\r\n\r\n      <!-- Striped rows start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Striped rows</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"card-body\">\r\n                <p class=\"card-text\">Use <code class=\"highlighter-rouge\">.table-striped</code> to add\r\n                  zebra-striping to any table row within the <code class=\"highlighter-rouge\">&lt;tbody&gt;</code>.\r\n                  This styling doesn't work in IE8 and below as <code>:nth-child</code> CSS selector\r\n                  isn't\r\n                  supported.</p>\r\n              </div>\r\n              <div class=\"table\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-striped\">\r\n                   <thead>\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Striped rows end -->\r\n\r\n      <!-- Striped rows with inverse table start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"card table-bottom-space\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Striped rows with inverse table</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"card-body\">\r\n                <p class=\"card-text\">Use <code>.table-inverse</code> with <code>.table-striped</code> to\r\n                  add\r\n                  zebra-striping to any inverse table row within the <code>&lt;tbody&gt;</code>. This\r\n                  styling\r\n                  doesn't work in IE8 and below as <code>:nth-child</code> CSS selector isn't\r\n                  supported.</p>\r\n              </div>\r\n              <div class=\"table\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-inverse table-striped mb-0\">\r\n                   <thead>\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n   <!-- Bordered table start -->\r\n   <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card table-bottom-space\">\r\n        <div class=\"card-header\">\r\n          <h4 class=\"card-title\">Bordered table</h4>\r\n        </div>\r\n        <div class=\"card-content collapse show\">\r\n          <div class=\"card-body\">\r\n            <p class=\"card-text\">Add<code>.table-bordered</code>  for borders on all sides of the table and cells.\r\n            </p>\r\n          </div>\r\n          <div class=\"table\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-bordered mb-0\">\r\n               <thead>\r\n               <tr>\r\n                 <th scope=\"col\">#</th>\r\n                 <th scope=\"col\">Firstname</th>\r\n                 <th scope=\"col\">Lastname</th>\r\n                 <th scope=\"col\">Username</th>\r\n               </tr>\r\n               </thead>\r\n               <tbody>\r\n               <tr *ngFor=\"let country of countries; index as i\">\r\n                 <th scope=\"row\">{{ i + 1 }}</th>\r\n                 <td>{{ country.firstname }} </td>\r\n                 <td>{{ country.lastname }}</td>\r\n                 <td>{{ country.username }}</td>\r\n               </tr>\r\n               </tbody>\r\n             </table>\r\n             </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <!-- Bordered striped table start -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"card table-bottom-space\">\r\n          <div class=\"card-header\">\r\n            <h4 class=\"card-title\">Bordered striped</h4>\r\n          </div>\r\n          <div class=\"card-content collapse show\">\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">Use <code>.table-striped</code> with <code>.table-bordered</code> to add\r\n                zebra-striping to any table row within the <code class=\"highlighter-rouge\">&lt;tbody&gt;</code>.</p>\r\n            </div>\r\n            <div class=\"table\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered table-striped\">\r\n                 <thead>\r\n                 <tr>\r\n                   <th scope=\"col\">#</th>\r\n                   <th scope=\"col\">Firstname</th>\r\n                   <th scope=\"col\">Lastname</th>\r\n                   <th scope=\"col\">Username</th>\r\n                 </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                 <tr *ngFor=\"let country of countries; index as i\">\r\n                   <th scope=\"row\">{{ i + 1 }}</th>\r\n                   <td>{{ country.firstname }} </td>\r\n                   <td>{{ country.lastname }}</td>\r\n                   <td>{{ country.username }}</td>\r\n                 </tr>\r\n                 </tbody>\r\n               </table>\r\n               </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     <!-- Bordered Table Inverse table start -->\r\n     <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"card table-bottom-space\">\r\n          <div class=\"card-header\">\r\n            <h4 class=\"card-title\">Bordered Table Inverse</h4>\r\n          </div>\r\n          <div class=\"card-content collapse show\">\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">Use <code>.table-inverse</code> with <code>.table-bordered</code> to add\r\n                zebra-striping to any table row within the <code class=\"highlighter-rouge\">&lt;tbody&gt;</code>.</p>\r\n            </div>\r\n            <div class=\"table\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered table-inverse mb-0\">\r\n                 <thead>\r\n                 <tr>\r\n                   <th scope=\"col\">#</th>\r\n                   <th scope=\"col\">Firstname</th>\r\n                   <th scope=\"col\">Lastname</th>\r\n                   <th scope=\"col\">Username</th>\r\n                 </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                 <tr *ngFor=\"let country of countries; index as i\">\r\n                   <th scope=\"row\">{{ i + 1 }}</th>\r\n                   <td>{{ country.firstname }} </td>\r\n                   <td>{{ country.lastname }}</td>\r\n                   <td>{{ country.username }}</td>\r\n                 </tr>\r\n                 </tbody>\r\n               </table>\r\n               </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     <!-- Hoverable rows table start -->\r\n     <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"card table-bottom-space\">\r\n          <div class=\"card-header\">\r\n            <h4 class=\"card-title\">Hoverable rows</h4>\r\n          </div>\r\n          <div class=\"card-content collapse show\">\r\n            <div class=\"card-body\">\r\n              <p>Add <code class=\"highlighter-rouge\">.table-hover</code> to enable a hover state on table rows\r\n                within a <code class=\"highlighter-rouge\">&lt;tbody&gt;</code>.</p>\r\n            </div>\r\n            <div class=\"table\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-hover mb-0\">\r\n                 <thead>\r\n                 <tr>\r\n                   <th scope=\"col\">#</th>\r\n                   <th scope=\"col\">Firstname</th>\r\n                   <th scope=\"col\">Lastname</th>\r\n                   <th scope=\"col\">Username</th>\r\n                 </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                 <tr *ngFor=\"let country of countries; index as i\">\r\n                   <th scope=\"row\">{{ i + 1 }}</th>\r\n                   <td>{{ country.firstname }} </td>\r\n                   <td>{{ country.lastname }}</td>\r\n                   <td>{{ country.username }}</td>\r\n                 </tr>\r\n                 </tbody>\r\n               </table>\r\n               </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   <!-- Contextual classes start -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgBlockUI, BlockUI } from 'ng-block-ui';\r\nimport { TableApiService } from 'src/app/_services/table-api.service';\r\n\r\n@Component({\r\n  selector: 'app-tablesizing',\r\n  templateUrl: './tablesizing.component.html',\r\n  styleUrls: ['./tablesizing.component.css']\r\n})\r\nexport class TablesizingComponent implements OnInit {\r\n  TablesizingData: any;\r\n  countries: any;\r\n  @BlockUI('extraLargeTable') blockUIExtraLargeTable: NgBlockUI;\r\n  @BlockUI('largeTable') blockUILargeTable: NgBlockUI;\r\n\r\n   options = {\r\n    close: true,\r\n    expand: true,\r\n    minimize: true,\r\n    reload: true\r\n  };\r\n  loadingIndicator: true;\r\n  public breadcrumb: any;\r\n\r\n  constructor(private tableApiservice: TableApiService) {\r\n  }\r\n  timeout: any;\r\n\r\n  ngOnInit() {\r\n    this.breadcrumb = {\r\n      'mainlabel': 'Tables Sizing',\r\n      'links': [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/sales'\r\n        },\r\n        {\r\n          'name': 'Tables',\r\n          'isLink': true,\r\n          'link': '#'\r\n        },\r\n        {\r\n          'name': 'Tables Sizing',\r\n          'isLink': false\r\n        }\r\n      ]\r\n    };\r\n      this.tableApiservice.getTableBorderData().subscribe(Response => {\r\n      this.TablesizingData = Response;\r\n      this.getTabledata();\r\n      });\r\n  }\r\n  getTabledata() {\r\n    this.countries = this.TablesizingData.rows;\r\n  }\r\n\r\n  onPage(event) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  reloadExtraLargeTable() {\r\n    this.blockUIExtraLargeTable.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIExtraLargeTable.stop();\r\n    }, 2500);\r\n  }\r\n\r\n  reloadLargeTable() {\r\n    this.blockUILargeTable.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUILargeTable.stop();\r\n    }, 2500);\r\n  }\r\n}\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <!-- Extra large table start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" *blockUI=\"'extraLargeTable'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Extra Large table</h4>\r\n                </div>\r\n                <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of Extra large table, Add <code>.table-xl</code> class to the\r\n                  <code>.table</code> to create a table with extra large spacing. Extra larger table all rows have\r\n                  <code>1.25rem</code> height.</p>\r\n              </div>\r\n\r\n              <div class=\"\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-xl mb-0\">\r\n                   <thead class=\"bouble-border\">\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n              </div>\r\n             </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- Extra large table end -->\r\n\r\n      <!-- Large table start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" *blockUI=\"'largeTable'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Large table</h4>\r\n                </div>\r\n                <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of large table, Add <code>.table-lg</code> class to the <code>.table</code>\r\n                  to create a table with large spacing. Larger table all rows have <code>0.9rem</code> height.</p>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-lg mb-0\">\r\n                   <thead class=\"bouble-border\">\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- Large table end -->\r\n      <!-- Default table start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Default table</h4>\r\n                </div>\r\n                <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of large table, Add <code>.table-lg</code> class to the <code>.table</code>\r\n                  to create a table with large spacing. Larger table all rows have <code>0.9rem</code> height.</p>\r\n              </div>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-de mb-0\">\r\n                   <thead class=\"bouble-border\">\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- Default table end -->\r\n      <!-- Small table start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Small table</h4>\r\n            </div>\r\n            <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of small table, Add <code>.table-sm</code> class to the <code>.table</code>\r\n                  to create a table with small spacing. Small table all rows have <code>0.6rem</code> height.</p>\r\n              </div>\r\n\r\n              <div class=\"table table-sm mb-0 back_ground\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-sm mb-0\">\r\n                   <thead>\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Small table end -->\r\n\r\n      <!-- Extra Small table start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Extra Small table</h4>\r\n            </div>\r\n            <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of extra small table, Add <code>.table-xs</code> class to the\r\n                  <code>.table</code> to create a table with extra small spacing. Extra small table all rows have\r\n                  <code>0.4rem</code> height.</p>\r\n              </div>\r\n\r\n            \r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-xs\">\r\n                   <thead >\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Firstname</th>\r\n                     <th scope=\"col\">Lastname</th>\r\n                     <th scope=\"col\">Username</th>\r\n                   </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                   <tr *ngFor=\"let country of countries; index as i\">\r\n                     <th scope=\"row\">{{ i + 1 }}</th>\r\n                     <td>{{ country.firstname }} </td>\r\n                     <td>{{ country.lastname }}</td>\r\n                     <td>{{ country.username }}</td>\r\n                   </tr>\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n            \r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- ////////////////////////////////////////////////////////////////////////////-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgBlockUI, BlockUI } from 'ng-block-ui';\r\nimport { TableApiService } from 'src/app/_services/table-api.service';\r\n\r\n@Component({\r\n  selector: 'app-tableborder',\r\n  templateUrl: './tableborder.component.html',\r\n  styleUrls: ['./tableborder.component.css']\r\n})\r\nexport class TableborderComponent implements OnInit {\r\n  TableborderData: any;\r\n  countries: any;\r\n   @BlockUI('tableRowBorders') blockUITableRowBorders: NgBlockUI;\r\n  @BlockUI('borderlessTable') blockUIBorderlessTable: NgBlockUI;\r\n\r\n  options = {\r\n    close: true,\r\n    expand: true,\r\n    minimize: true,\r\n    reload: true\r\n  };\r\n  loadingIndicator: true;\r\n  timeout: any;\r\n  public breadcrumb: any;\r\n\r\n  constructor(private tableApiservice: TableApiService) {}\r\n   ngOnInit() {\r\n    this.breadcrumb = {\r\n      'mainlabel': 'Table border',\r\n      'links': [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/sales'\r\n        },\r\n        {\r\n          'name': 'Tables',\r\n          'isLink': true,\r\n          'link': '#'\r\n        },\r\n        {\r\n          'name': 'Table border',\r\n          'isLink': false\r\n        }\r\n      ]\r\n    };\r\n      this.tableApiservice.getTableBorderData().subscribe(Response => {\r\n      this.TableborderData = Response;\r\n      this.getTabledata();\r\n      });\r\n  }\r\n  getTabledata() {\r\n    this.countries = this.TableborderData.rows;\r\n  }\r\n  onPage(event) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  reloadTableRowBorders() {\r\n    this.blockUITableRowBorders.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUITableRowBorders.stop();\r\n    }, 2500);\r\n  }\r\n\r\n  reloadBorderlessTable() {\r\n    this.blockUIBorderlessTable.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIBorderlessTable.stop();\r\n    }, 2500);\r\n  }\r\n}\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" *blockUI=\"'tableRowBorders'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Table Row borders</h4>\r\n                </div>\r\n                <div class=\"card-content\">\r\n                  <div class=\"card-body card-dashboard\">\r\n              <p class=\"card-text\">Example of table row borders. This is a default table border style by bootstrap and attached to <code>.table class </code>.</p>\r\n                  </div>\r\n                  <div class=\"table-responsive\">\r\n                      <table class=\"table mb-0\">\r\n                       <thead>\r\n                       <tr>\r\n                         <th scope=\"col\">#</th>\r\n                         <th scope=\"col\">Firstname</th>\r\n                         <th scope=\"col\">Lastname</th>\r\n                         <th scope=\"col\">Username</th>\r\n                       </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                       <tr *ngFor=\"let country of countries; index as i\">\r\n                         <th scope=\"row\">{{ i + 1 }}</th>\r\n                         <td>{{ country.firstname }} </td>\r\n                         <td>{{ country.lastname }}</td>\r\n                         <td>{{ country.username }}</td>\r\n                       </tr>\r\n                       </tbody>\r\n                     </table>\r\n                     </div>\r\n                    </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n      <!-- Row borders end -->\r\n      <div class=\"row\">\r\n          <div class=\"col-12\" *blockUI=\"'tableRowBorders'; message: 'Loading'\">\r\n              <div class=\"card\">\r\n                  <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Table column borders</h4>\r\n                  </div>\r\n                  <div class=\"card-content\">\r\n                      <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of vertical table borders. This custom table border layout displays vertical borders only. However border between table head and table body is also visible for better visual separation. To use this layout add <code>.table-columned </code>class to the table with <code>.table class </code>.</p>\r\n               <p>Example of table column borders. Add <code>.table-column</code> class with <code>.table </code> for table with column border.</p>\r\n                      </div>\r\n               <div class=\"table table-bordered mb-0 back_ground\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-column\">\r\n                         <thead>\r\n                         <tr>\r\n                           <th scope=\"col\">#</th>\r\n                           <th scope=\"col\">Firstname</th>\r\n                           <th scope=\"col\">Lastname</th>\r\n                           <th scope=\"col\">Username</th>\r\n                         </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                         <tr *ngFor=\"let country of countries; index as i\">\r\n                           <th scope=\"row\">{{ i + 1 }}</th>\r\n                           <td>{{ country.firstname }} </td>\r\n                           <td>{{ country.lastname }}</td>\r\n                           <td>{{ country.username }}</td>\r\n                         </tr>\r\n                         </tbody>\r\n                       </table>\r\n                       </div>\r\n\r\n                </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" *blockUI=\"'borderlessTable'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Both borders</h4>\r\n                </div>\r\n                <div class=\"card-content\">\r\n                    <div class=\"card-body card-dashboard\">\r\n          <p class=\"card-text\">Example of table having both column & row borders. Add <code>.table-bordered </code> class with <code> .table </code>for both borders table.</p>\r\n                    </div>\r\n          <div class=\"table-responsive\">\r\n                      <table class=\"table table-bordered mb-0\">\r\n                       <thead>\r\n                       <tr>\r\n                         <th scope=\"col\">#</th>\r\n                         <th scope=\"col\">Firstname</th>\r\n                         <th scope=\"col\">Lastname</th>\r\n                         <th scope=\"col\">Username</th>\r\n                       </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                       <tr *ngFor=\"let country of countries; index as i\">\r\n                         <th scope=\"row\">{{ i + 1 }}</th>\r\n                         <td>{{ country.firstname }} </td>\r\n                         <td>{{ country.lastname }}</td>\r\n                         <td>{{ country.username }}</td>\r\n                       </tr>\r\n                       </tbody>\r\n                     </table>\r\n                     </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!--borderless table start-->\r\n      <div class=\"row\">\r\n          <div class=\"col-12\" *blockUI=\"'borderlessTable'; message: 'Loading'\">\r\n              <div class=\"card\">\r\n                  <div class=\"card-header\">\r\n                    <h4 class=\"card-title\">Borderless Table</h4>\r\n                  </div>\r\n                  <div class=\"card-content\">\r\n                      <div class=\"card-body card-dashboard\">\r\n                   <p class=\"card-text\">Example of borderless table, all border are hidden, except border <code>.thead </code>and <code>.tfoot</code>. Add .table-borderless class with .table for borderless table.</p>\r\n                      </div>\r\n                     <div class=\"table-responsive\">\r\n                        <table class=\"table table-borderless mb-0\">\r\n                         <thead>\r\n                         <tr>\r\n                           <th scope=\"col\">#</th>\r\n                           <th scope=\"col\">Firstname</th>\r\n                           <th scope=\"col\">Lastname</th>\r\n                           <th scope=\"col\">Username</th>\r\n                         </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                         <tr *ngFor=\"let country of countries; index as i\">\r\n                           <th scope=\"row\">{{ i + 1 }}</th>\r\n                           <td>{{ country.firstname }} </td>\r\n                           <td>{{ country.lastname }}</td>\r\n                           <td>{{ country.username }}</td>\r\n                         </tr>\r\n                         </tbody>\r\n                       </table>\r\n                       </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      <!-- Borderless table end -->\r\n\r\n      <!-- Default borders end-->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Default borders</h4>\r\n            </div>\r\n            <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of a default border table. This is bootstrap default table having only\r\n                  <code>.table</code> class.</p>\r\n              </div>\r\n                   <div class=\"table-responsive\">\r\n                      <table class=\"table mb-0 back_ground default_borders\">\r\n                       <thead>\r\n                       <tr>\r\n                         <th scope=\"col\">#</th>\r\n                         <th scope=\"col\">Firstname</th>\r\n                         <th scope=\"col\">Lastname</th>\r\n                         <th scope=\"col\">Username</th>\r\n                       </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                       <tr *ngFor=\"let country of countries; index as i\">\r\n                         <th scope=\"row\">{{ i + 1 }}</th>\r\n                         <td>{{ country.firstname }} </td>\r\n                         <td>{{ country.lastname }}</td>\r\n                         <td>{{ country.username }}</td>\r\n                       </tr>\r\n                       </tbody>\r\n                     </table>\r\n                     </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Default borders end -->\r\n\r\n      <!-- Solid border end-->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Solid border</h4>\r\n            </div>\r\n            <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of a solid bordered table row. This border inherits all styling options\r\n                  from the default border style, the only difference is it has 2px width. Add <code>.border-solid</code>\r\n                  to the table body row. This border style works only with row borders.</p>\r\n              </div>\r\n                    <div class=\"table-responsive \">\r\n                      <table class=\"table  mb-0\">\r\n                       <thead class =\"border-solid\">\r\n                       <tr>\r\n                         <th scope=\"col\">#</th>\r\n                         <th scope=\"col\">Firstname</th>\r\n                         <th scope=\"col\">Lastname</th>\r\n                         <th scope=\"col\">Username</th>\r\n                       </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                       <tr *ngFor=\"let country of countries; index as i\">\r\n                         <th scope=\"row\">{{ i + 1 }}</th>\r\n                         <td>{{ country.firstname }} </td>\r\n                         <td>{{ country.lastname }}</td>\r\n                         <td>{{ country.username }}</td>\r\n                       </tr>\r\n                       </tbody>\r\n                     </table>\r\n                     </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- Solid border end -->\r\n\r\n      <!-- Double border end-->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Double border</h4>\r\n            </div>\r\n            <div class=\"card-content\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of double bordered table row. This has 4px width and double style. Add\r\n                  <code>.border-double</code> to the table body row. This border style works only with row borders.</p>\r\n              </div>\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table  mb-0\">\r\n                       <thead class=\"bouble-border\">\r\n                       <tr>\r\n                         <th scope=\"col\">#</th>\r\n                         <th scope=\"col\">Firstname</th>\r\n                         <th scope=\"col\">Lastname</th>\r\n                         <th scope=\"col\">Username</th>\r\n                       </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                       <tr *ngFor=\"let country of countries; index as i\">\r\n                         <th scope=\"row\">{{ i + 1 }}</th>\r\n                         <td>{{ country.firstname }} </td>\r\n                         <td>{{ country.lastname }}</td>\r\n                         <td>{{ country.username }}</td>\r\n                       </tr>\r\n                       </tbody>\r\n                     </table>\r\n                     </div>\r\n\r\n            </div>\r\n          </div>\r\n          <!-- Double border end -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ////////////////////////////////////////////////////////////////////////////-->\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgBlockUI, BlockUI } from 'ng-block-ui';\r\nimport { TableApiService } from 'src/app/_services/table-api.service';\r\n\r\n@Component({\r\n  selector: 'app-tablestyling',\r\n  templateUrl: './tablestyling.component.html',\r\n  styleUrls: ['./tablestyling.component.css']\r\n})\r\nexport class TablestylingComponent implements OnInit {\r\n  TableStylingData: any;\r\n  countries: any;\r\n  @ViewChild('myTable', { static: true }) table: any;\r\n  @BlockUI('defaultStyling') blockUIDefaultStyling: NgBlockUI;\r\n  @BlockUI('tableHeaderStyling') blockUITableHeaderStyling: NgBlockUI;\r\n\r\n  options = {\r\n    close: true,\r\n    expand: true,\r\n    minimize: true,\r\n    reload: true\r\n  };\r\n\r\n  loadingIndicator: true;\r\n  timeout: any;\r\n  public breadcrumb: any;\r\n\r\n  constructor(private tableApiservice: TableApiService) {\r\n  }\r\n  ngOnInit() {\r\n    this.breadcrumb = {\r\n      'mainlabel': 'Tables styling',\r\n      'links': [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/sales'\r\n        },\r\n        {\r\n          'name': 'Tables',\r\n          'isLink': true,\r\n          'link': '#'\r\n        },\r\n        {\r\n          'name': 'Tables styling',\r\n          'isLink': false\r\n        }\r\n      ]\r\n    };\r\n      this.tableApiservice.getTableStylingData().subscribe(Response => {\r\n      this.TableStylingData = Response;\r\n      this.getTabledata();\r\n      });\r\n  }\r\n  getTabledata() {\r\n    this.countries = this.TableStylingData.rows;\r\n  }\r\n\r\n  onPage(event) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  reloadDefaultStyling() {\r\n    this.blockUIDefaultStyling.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIDefaultStyling.stop();\r\n    }, 2500);\r\n  }\r\n\r\n  reloadTableHeaderStyling() {\r\n    this.blockUITableHeaderStyling.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUITableHeaderStyling.stop();\r\n    }, 2500);\r\n  }\r\n\r\n}\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <!-- Default styling start -->\r\n      <div class=\"row\" id=\"default\">\r\n        <div class=\"col-12\" *blockUI=\"'defaultStyling'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Default styling</h4>\r\n                </div>\r\n                <div class=\"card-content collapse show\">\r\n              <div class=\"card-body card-dashboard \">\r\n                <p class=\"card-text\">Example of a table with bootstrap default styling. By default any\r\n                  table with\r\n                  <code>.table</code> class has <em>transparent</em> background color.</p>\r\n              </div>\r\n\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table mb-0\">\r\n                  <thead class=\"bouble-border\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n</div>\r\n            </div>\r\n            \r\n        </div>\r\n      </div>\r\n      <!-- Default styling end -->\r\n      <!-- Table header styling start -->\r\n      <div class=\"row\" id=\"header-styling\">\r\n        <div class=\"col-12\" *blockUI=\"'tableHeaderStyling'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Table header styling</h4>\r\n                </div>\r\n                <div class=\"card-content collapse show\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of a custom table <em>header</em> styling. Table header\r\n                  supports  default contextual and custom background colors change to use bootstrap class.\r\n                  Add <code>.bg-*</code> class to the header row. All border and text colors\r\n                  will be\r\n                  automatically adjusted.</p>\r\n              </div>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table mb-0\">\r\n                  <thead class=\"bg-success white\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                     <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div class=\"card-body card-dashboard\">\r\n                <p>Apart form bootstrap color options you can also use Modern Admin color palette\r\n                  options, To set\r\n                  the selected bg color lighten use <code>.bg-*</code> where <code>*</code> is the\r\n                  value of your\r\n                  selected color from palette, and with that use <code>.bg-lighten-*</code> or\r\n                  <code>.bg-darken-*</code>\r\n                  class where <code>*</code> is the value between '1-5' of your selected\r\n                  lighten/darken color\r\n                  from modern color palette. So for color lighten 4 bg class will be\r\n                  <code>.bg-lighten-4</code>.</p>\r\n              </div>\r\n\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table mb-0\">\r\n                  <thead class=\"bg-yellow bg-lighten-4\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Table header styling start -->\r\n      <div class=\"row\" id=\"header-styling\">\r\n        <div class=\"col-12\" *blockUI=\"'tableHeaderStyling'; message: 'Loading'\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                  <h4 class=\"card-title\">Table footer styling</h4>\r\n                </div>\r\n                <div class=\"card-content collapse show\">      \r\n               <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of a custom table <em>footer</em> styling. Table footer\r\n                  supports\r\n                  default contextual and custom background colors to use bootstrap class .\r\n                   Add <code>.bg-*</code> class to the header row. All border and text colors\r\n                  will be automatically adjusted.</p>\r\n              </div>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table mb-0\">\r\n\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <tfoot class=\"bg-success white\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              <div class=\"card-body card-dashboard\">\r\n                <p>Apart form bootstrap color options you can also use Modern Admin color palette\r\n                  options, To set\r\n                  the selected bg color lighten use <code>.bg-*</code> where <code>*</code> is the\r\n                  value of your\r\n                  selected color from palette, and with that use <code>.bg-lighten-*</code> or\r\n                  <code>.bg-darken-*</code>\r\n                  class where <code>*</code> is the value between '1-5' of your selected\r\n                  lighten/darken color\r\n                  from modern color palette. So for color lighten 4 bg class will be\r\n                  <code>.bg-lighten-4</code>.</p>\r\n              </div>\r\n\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table mb-0\">\r\n\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <tfoot class=\"bg-yellow bg-lighten-4\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" id=\"table-formatting\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Custom table formatting</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Example of a table with custom <em>formatting</em> color.</p>\r\n              </div>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-inverse  bg-primary\">\r\n                  <thead class=\"\">\r\n                    <tr>\r\n                       <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{country.password}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <p class=\"text-bold-600 px-1\">Header and footer formatting</p>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-inverse  bg-primary\">\r\n                  <thead class=\"\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <tfoot class=\"table table-inverse  bg-primary\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              <div class=\"card-body card-dashboard\">\r\n                <p>Modern Admin color palette options can be use also for the custom table formatting,\r\n                  To set the\r\n                  selected bg color lighten\r\n                  use <code>.bg-*</code> where <code>*</code> is the value\r\n                  of your\r\n                  selected color from palette, and with that use <code>.bg-lighten-*</code> or\r\n                  <code>.bg-darken-*</code>\r\n                  class where <code>*</code> is the value between '1-5' of your selected\r\n                  lighten/darken color\r\n                  from modern color palette. So for color lighten 4 bg class will be\r\n                  <code>.bg-lighten-4</code>.</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-inverse bg-purple bg-lighten-2\">\r\n                  <thead>\r\n\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n             <p class=\"text-bold-600 px-1\">Header and footer formatting</p>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-inverse bg-purple bg-lighten-2\">\r\n\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <tfoot class=\"table table-inverse bg-purple bg-lighten-2\">\r\n                    <tr>\r\n                      <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </tfoot>\r\n\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" id=\"table-formatting\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Table formatting options</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"card-body card-dashboard\">\r\n                <p class=\"card-text\">Table with custom formatting color supports all default table layouts and options.\r\n                  In this example our table displays all possible borders, striped rows and changes background color on\r\n                  row hover.\r\n                </p>\r\n              </div>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table bg-warning table-bordered table-striped table-hover white\">\r\n                  <thead>\r\n                    <tr>\r\n                     <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div class=\"card-body card-dashboard\">\r\n                <p>Modern Admin color palette options can be use also for the custom table formatting,\r\n                  To set the\r\n                  selected bg color lighten\r\n                  use <code>.bg-*</code> where <code>*</code> is the value\r\n                  of your\r\n                  selected color from palette, and with that use <code>.bg-lighten-*</code> or\r\n                  <code>.bg-darken-*</code>\r\n                  class where <code>*</code> is the value between '1-5' of your selected\r\n                  lighten/darken color\r\n                  from modern color palette. So for color lighten 4 bg class will be\r\n                  <code>.bg-lighten-4</code>.</p>\r\n              </div>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table bg-red bg-lighten-1 table-inverse table-bordered table-striped table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                     <th scope=\"col\">Firstname</th>\r\n                      <th scope=\"col\">Lastname</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let country of countries; index as i\">\r\n                      <td>{{ country.firstname }} </td>\r\n                      <td>{{ country.lastname }}</td>\r\n                      <td>{{ country.email }}</td>\r\n                      <td>{{ country.password }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- ////////////////////////////////////////////////////////////////////////////-->","import {Injectable, PipeTransform} from '@angular/core';\r\n\r\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\r\nimport {COUNTRIES, Country} from '../content/table/boostraptables/ngxboostraptables/countries';\r\nimport {DecimalPipe} from '@angular/common';\r\nimport {debounceTime, delay, switchMap, tap} from 'rxjs/operators';\r\nimport {SortDirection} from '../_directives/sortable.directive';\r\n\r\ninterface SearchResult {\r\n  countries: Country[];\r\n  total: number;\r\n}\r\n\r\ninterface State {\r\n  page: number;\r\n  pageSize: number;\r\n  searchTerm: string;\r\n  sortColumn: string;\r\n  sortDirection: SortDirection;\r\n}\r\n\r\nfunction compare(v1, v2) {\r\n  return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n}\r\n\r\nfunction sort(countries: Country[], column: string, direction: string): Country[] {\r\n  if (direction === '') {\r\n    return countries;\r\n  } else {\r\n    return [...countries].sort((a, b) => {\r\n      const res = compare(a[column], b[column]);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(country: Country, term: string, pipe: PipeTransform) {\r\n  return country.firstname.toLowerCase().includes(term.toLowerCase())\r\n  || country.lastname.toLowerCase().includes(term.toLowerCase())\r\n  || country.username.toLowerCase().includes(term.toLowerCase());\r\n }\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CountryService {\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _countries$ = new BehaviorSubject<Country[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 4,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  constructor(private pipe: DecimalPipe) {\r\n    this._search$.pipe(\r\n      tap(() => this._loading$.next(true)),\r\n      debounceTime(200),\r\n      switchMap(() => this._search()),\r\n      delay(200),\r\n      tap(() => this._loading$.next(false))\r\n    ).subscribe(result => {\r\n      this._countries$.next(result.countries);\r\n      this._total$.next(result.total);\r\n    });\r\n\r\n    this._search$.next();\r\n  }\r\n\r\n  get countries$() { return this._countries$.asObservable(); }\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({page}); }\r\n  set pageSize(pageSize: number) { this._set({pageSize}); }\r\n  set searchTerm(searchTerm: string) { this._set({searchTerm}); }\r\n  set sortColumn(sortColumn: string) { this._set({sortColumn}); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({sortDirection}); }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchResult> {\r\n    const {sortColumn, sortDirection, pageSize, page, searchTerm} = this._state;\r\n\r\n    // 1. sort\r\n    let countries = sort(COUNTRIES, sortColumn, sortDirection);\r\n\r\n    // 2. filter\r\n    countries = countries.filter(country => matches(country, searchTerm, this.pipe));\r\n    const total = countries.length;\r\n\r\n    // 3. paginate\r\n    countries = countries.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({countries, total});\r\n  }\r\n}\r\n","export interface Country {\r\n  id: number;\r\n  firstname: string;\r\n  lastname: string;\r\n  username: string;\r\n}\r\nexport const COUNTRIES: Country[] = [\r\n  {\r\n    'id': 1,\r\n    'firstname': 'Mark',\r\n    'lastname': 'Otto',\r\n    'username': '@mdo'\r\n},\r\n{\r\n    'id': 2,\r\n    'firstname': 'Jacob',\r\n    'lastname': 'Thornton',\r\n    'username': '@fat'\r\n},\r\n{\r\n    'id': 3,\r\n    'firstname': 'Larry',\r\n    'lastname': 'the Bird',\r\n    'username': '@twitter'\r\n},\r\n{\r\n    'id': 4,\r\n    'firstname': 'Fensy',\r\n    'lastname': 'loir',\r\n    'username': '@kort'\r\n},\r\n{\r\n    'id': 5,\r\n    'firstname': 'Piter',\r\n    'lastname': 'Pan',\r\n    'username': '@google'\r\n},\r\n{\r\n    'id': 6,\r\n    'firstname': 'July',\r\n    'lastname': 'Dooley',\r\n    'username': '@bat'\r\n},\r\n{\r\n  'id': 7,\r\n  'firstname': 'Jon',\r\n  'lastname': 'Snow',\r\n  'username': '@hest'\r\n},\r\n{\r\n  'id': 8,\r\n  'firstname': 'Alexandra',\r\n  'lastname': 'Blake',\r\n  'username': '@foe'\r\n},\r\n{\r\n  'id': 9,\r\n  'firstname': 'Alonso',\r\n  'lastname': 'Lanier',\r\n  'username': '@phe'\r\n},\r\n{\r\n  'id': 10,\r\n  'firstname': 'Claire',\r\n  'lastname': 'Burgess',\r\n  'username': '@yaker'\r\n},\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgBlockUI, BlockUI } from 'ng-block-ui';\r\n\r\ndeclare var require: any;\r\nconst data: any = require('../../../../../assets/data/datatables/tablecomponent/tablecomponent.json');\r\n\r\n@Component({\r\n  selector: 'app-tablecomponents',\r\n  templateUrl: './tablecomponents.component.html',\r\n  styleUrls: ['./tablecomponents.component.css']\r\n})\r\nexport class TablecomponentsComponent implements OnInit {\r\n\r\n  @BlockUI('components') blockUIComponents: NgBlockUI;\r\n  @BlockUI('alerts') blockUIAlerts: NgBlockUI;\r\n\r\n  options = {\r\n    close: true,\r\n    expand: true,\r\n    minimize: true,\r\n    reload: true\r\n  };\r\n  disabled = false;\r\n  singleCities = [];\r\n  basicSelectedItem = [];\r\n  singleDropdownSettings: any = {};\r\n  hideSearchBoxdropdownSettings: any = {};\r\n  closeDropdownSelection = false;\r\n  isPrimaryClosed1 = false;\r\n  isPrimaryClosed2 = false;\r\n  isPrimaryClosed3 = false;\r\n  singleSelectedItem = [];\r\n  responsiveSelectedItem = [];\r\n  singlePlaceholderSelectedItem = [];\r\n  disableSelectedItem = [];\r\n  hideSearchBox = [];\r\n  ShowFilter = false;\r\n  limitSelection = false;\r\n  multipleCities = [];\r\n  multipleSelectedItems = [];\r\n  multipleDropdownSettings: any = {};\r\n  multipleLimitDropdownSettings: any = {};\r\n  basicMultiSelect = [];\r\n  singleProgrammaticCities = [];\r\n  singleProgrammaticSelectedItem = [];\r\n  singleProgrammaticDropdownSettings: any = {};\r\n\r\n  multipleProgrammaticSelectedItem = [];\r\n  multipleProgrammaticDropdownSettings: any = {};\r\n\r\n  singleCitiesEvents = [];\r\n  singleEventsSelectedItem = [];\r\n  singleEventsDropdownSettings: any = {};\r\n\r\n  multipleCitiesEvents = [];\r\n  multipleEventsSelectedItem = [];\r\n  multipleEventsDropdownSettings: any = {};\r\n\r\n  loadingArray = [];\r\n  loadingArraySelectedItem = [];\r\n  loadingArrayDropdownSettings: any = {};\r\n\r\n  public breadcrumb: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.breadcrumb = {\r\n      'mainlabel': 'Table components',\r\n      'links': [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/sales'\r\n        },\r\n        {\r\n          'name': 'Tables',\r\n          'isLink': true,\r\n          'link': '#'\r\n        },\r\n        {\r\n          'name': 'Table components',\r\n          'isLink': false\r\n        }\r\n      ]\r\n    };\r\n    this.singleCities = data ['Cities'];\r\n      this.singleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true\r\n    };\r\n    this.hideSearchBoxdropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: false,\r\n      closeDropDownOnSelection: true\r\n    };\r\n    this.multipleCities = data['Cities'];\r\n    this.basicMultiSelect = data['Select'];\r\n    this.multipleDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true\r\n    };\r\n    this.multipleLimitDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      limitSelection: 2,\r\n      allowSearchFilter: true\r\n    };\r\n\r\n    this.singleProgrammaticCities = data['Cities'];\r\n\r\n    this.singleProgrammaticSelectedItem = [{ item_id: 1, item_text: 'Alaska' }];\r\n\r\n    this.singleProgrammaticDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true\r\n    };\r\n\r\n    this.multipleProgrammaticDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true,\r\n      clearSearchFilter: true\r\n    };\r\n\r\n    this.singleCitiesEvents = data['Cities'];\r\n\r\n    this.singleEventsSelectedItem = [{ item_id: 2, item_text: 'California' }];\r\n\r\n    this.singleEventsDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n\r\n    this.multipleCitiesEvents = data['Cities'];\r\n    this.multipleEventsSelectedItem = [{ item_id: 2, item_text: 'California' }, { item_id: 3, item_text: 'Colorado' }];\r\n\r\n    this.multipleEventsDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n    };\r\n\r\n    this.loadingArray = data['Select'];\r\n    this.loadingArraySelectedItem = this.loadingArray;\r\n\r\n    this.loadingArrayDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true\r\n    };\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log('onItemSelect', item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log('onSelectAll', items);\r\n  }\r\n  onSingleEventsItemSelect(item: any) {\r\n    console.log('onSingleEventsItemSelect', item);\r\n    window.alert('Select Event fired.');\r\n    window.alert('Change Event fired.');\r\n  }\r\n  onSingleEventsItemsClose() {\r\n    console.log('onSingleEventsItemClose');\r\n    window.alert('Close Event fired.');\r\n  }\r\n  onMultipleEventsItemsClose() {\r\n    console.log('onMultipleEventsItemsClose');\r\n    window.alert('Close Event fired.');\r\n  }\r\n\r\n  reloadComponents() {\r\n    this.blockUIComponents.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIComponents.stop();\r\n    }, 2500);\r\n  }\r\n\r\n  reloadAlerts() {\r\n    this.blockUIAlerts.start('Loading..');\r\n\r\n    setTimeout(() => {\r\n      this.blockUIAlerts.stop();\r\n    }, 2500);\r\n  }\r\n}\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <!-- UI components start -->\r\n      <div class=\"row\" id=\"ui\">\r\n        <div class=\"col-12\" *blockUI=\"'components'; message: 'Loading'\">\r\n          <m-card [options]=\"options\" (reloadFunction)=\"reloadComponents($event)\">\r\n            <ng-container mCardHeaderTitle>\r\n              UI components\r\n            </ng-container>\r\n            <ng-container mCardBody>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Button</td>\r\n                      <td class=\"width-350\">\r\n                        <button type=\"button\" class=\"btn btn-success mr-1 mb-1\">Default\r\n                          Buttons</button>\r\n                      </td>\r\n                      <td>Bootstrap includes six predefined button styles, each serving its own\r\n                        semantic\r\n                        purpose.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Round Buttons</td>\r\n                      <td>\r\n                        <button type=\"button\" class=\"btn btn-danger btn-round mr-1 mb-1\">Default\r\n                          Buttons</button>\r\n                      </td>\r\n                      <td>Use <code>.btn-round</code> class to button for Round Buttons.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Button dropdowns</td>\r\n                      <td>\r\n                        <div class=\"btn-group mr-1 mb-1\">\r\n                          <div ngbDropdown class=\"d-inline-block\">\r\n                            <button class=\"btn btn-info btn-min-width dropdown-toggle\" id=\"dropdownBasic1\"\r\n                              ngbDropdownToggle>Info</button>\r\n                            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                              <button class=\"dropdown-item\">Action - 1</button>\r\n                              <button class=\"dropdown-item\">Another Action</button>\r\n                              <button class=\"dropdown-item\">Something else is\r\n                                here</button>\r\n                              <li class=\"dropdown-divider\"></li>\r\n                              <button class=\"dropdown-item\">Separated link</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>Turn a button into a dropdown toggle with some basic markup changes.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Basic Button group</td>\r\n                      <td>\r\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                          <button type=\"button\" class=\"btn btn-primary\">Primary</button>\r\n                          <button type=\"button\" class=\"btn btn-success\">Success</button>\r\n                          <button type=\"button\" class=\"btn btn-warning\">Warning</button>\r\n                        </div>\r\n                      </td>\r\n                      <td>Group a series of buttons together on a single line with the button\r\n                        group. Wrap a\r\n                        series of buttons with <code>.btn</code> in <code>.btn-group.</code>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Buttons with Icon</td>\r\n                      <td>\r\n                        <button type=\"button\" class=\"btn btn-info mr-1 mb-1\"><i class=\"feather ft-info\"></i> Info</button>\r\n                      </td>\r\n                      <td>Bootstrap includes six predefined button styles, each serving its own\r\n                        semantic\r\n                        purpose.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Icon Button</td>\r\n                      <td>\r\n                        <button type=\"button\" class=\"btn btn-icon btn-success mr-1\"><i class=\"feather ft-camera\"></i></button>\r\n                      </td>\r\n                      <td>Simple Icon Button</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Floating Buttons</td>\r\n                      <td>\r\n                        <button type=\"button\" class=\"btn btn-float btn-info\"><i\r\n                            class=\"feather ft-search\"></i><span>search</span></button>\r\n                      </td>\r\n                      <td>Floating action buttons are used for a special type of promoted action.\r\n                        They are\r\n                        distinguished by a circled icon floating above the UI and have special\r\n                        motion\r\n                        behaviors related to morphing, launching, and the transferring anchor\r\n                        point.\r\n                        <p>\r\n                          Use the class <code>.btn</code> along with class\r\n                          <code>.btn-floating</code></p>\r\n                        .</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Loading Buttons</td>\r\n                      <td>\r\n                        <button class=\"btn btn-primary mr-1 mb-1 ladda-button\" data-style=\"expand-up\"><span\r\n                            class=\"ladda-label\">Expand\r\n                            UP</span></button>\r\n                      </td>\r\n                      <td>Expand Animation Buttons</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </ng-container>\r\n          </m-card>\r\n        </div>\r\n      </div>\r\n      <!-- UI components end -->\r\n      <!-- Alerts start -->\r\n      <div class=\"row\" id=\"alerts\">\r\n        <div class=\"col-12\" *blockUI=\"'alerts'; message: 'Loading'\">\r\n          <m-card [options]=\"options\" (reloadFunction)=\"reloadAlerts($event)\">\r\n            <ng-container mCardHeaderTitle>\r\n              Alerts\r\n            </ng-container>\r\n            <ng-container mCardBody>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Basic Alert</td>\r\n                      <td class=\"width-350\">\r\n                        <ngb-alert [dismissible]=\"false\" [type]=\"'primary'\" role=\"alert\">\r\n                          <strong>Good Morning!</strong> Start your day with some alerts.\r\n                        </ngb-alert>\r\n                      </td>\r\n                      <td>Alerts are available for any length of text, as well as an optional dismiss\r\n                        button.\r\n                        Add <code>.alert.alert-COLOR</code> classes for alert with all theme colors.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Alerts with Links</td>\r\n                      <td>\r\n                        <ngb-alert *ngIf=\"!isPrimaryClosed1\" [type]=\"'primary'\" [dismissible]=\"false\" role=\"alert\">\r\n                          <strong>Good Morning!</strong> Start <a [routerLink]=\"\" class=\"alert-link\">your day</a>\r\n                          with some alerts.\r\n                        </ngb-alert>\r\n                      </td>\r\n                      <td>Add <code>.alert-link</code> class to add links to alerts.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dismissible Alerts</td>\r\n                      <td>\r\n                        <!-- <div class=\"alert alert-primary alert-dismissible mb-2\" role=\"alert\"> -->\r\n                        <ngb-alert *ngIf=\"!isPrimaryClosed2\" [dismissible]=\"true\" [type]=\"'primary'\"\r\n                          (close)=\"isPrimaryClosed2=true\" role=\"alert\">\r\n                          <strong>Good Morning!</strong> Start <a [routerLink]=\"\" class=\"alert-link\">your day</a>\r\n                          with some alerts.\r\n                        </ngb-alert>\r\n                        <!-- </div> -->\r\n                      </td>\r\n                      <td>\r\n                        Add a dismiss button and the <code>.alert-dismissible</code> class, which\r\n                        adds\r\n                        extra padding to the right of the alert and positions the\r\n                        <code>.close</code>\r\n                        button. On the dismiss button, add the <code>data-dismiss=\"alert\"</code>\r\n                        attribute,\r\n                        which triggers the JavaScript functionality. Be sure to use the\r\n                        <code>&lt;button&gt;</code>\r\n                        element with it for proper behavior across all devices. To animate alerts\r\n                        when\r\n                        dismissing them, be sure to add the <code>.fade</code> and <code>.in</code>\r\n                        classes.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Alerts with icons</td>\r\n                      <td>\r\n                        <ngb-alert *ngIf=\"!isPrimaryClosed3\" class=\"alert-icon-left\" [dismissible]=\"true\"\r\n                          [type]=\"'primary'\" (close)=\"isPrimaryClosed3=true\" role=\"alert\">\r\n                          <span class=\"alert-icon\"><i class=\"la la-heart\"></i></span>\r\n                          <strong>Good Morning!</strong> Start <a [routerLink]=\"\" class=\"alert-link\">your day</a>\r\n                          with some\r\n                          alerts.\r\n                        </ngb-alert>\r\n                      </td>\r\n                      <td>\r\n                        To add left/right icons to the alert, use class\r\n                        <code>.alert-icon-left</code> or\r\n                        <code>alert-icon-right</code> as required.\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </ng-container>\r\n          </m-card>\r\n        </div>\r\n      </div>\r\n      <!-- Alerts end -->\r\n      <!-- Callouts start -->\r\n      <div class=\"row\" id=\"callouts\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Callouts</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\"> Basic Callout</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"bs-callout-info callout-border-left p-1\">\r\n                          <strong>Great Job!</strong>\r\n                          <p>Biscuit macaroon tootsie roll croissant. Dessert candy canes\r\n                            halvah cookie\r\n                            liquorice.</p>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>.bs-callout-COLOR</code> for color callout.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Right Bordered Callouts</td>\r\n                      <td>\r\n                        <div class=\"bs-callout-danger callout-bordered callout-border-right p-1\">\r\n                          <strong>Not Bad!</strong>\r\n                          <p>Croissant carrot cake sesame snaps dessert wafer dessert wafer\r\n                            icing jelly.</p>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>.callout-border-right</code> for right bordered callout.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Callout with transparent Background</td>\r\n                      <td>\r\n                        <div class=\"bs-callout-pink callout-transparent callout-border-left p-1\">\r\n                          <h4 class=\"pink\">Super cool!</h4>\r\n                          <p>Cupcake macaroon chupa chups fruitcake. Candy canes cotton candy\r\n                            dessert.</p>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>.callout-transparent</code> for callout with white background.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Callout With Icon</td>\r\n                      <td>\r\n                        <div class=\"bs-callout-success mt-1\">\r\n                          <div class=\"media align-items-stretch\">\r\n                            <div class=\"media-left media-middle bg-success p-2 pt-3\">\r\n                              <i class=\"feather ft-eye white\"></i>\r\n                            </div>\r\n                            <div class=\"media-body p-1\">\r\n                              <strong>Congratulations!</strong>\r\n                              <p>Cake chupa chups tootsie roll brownie pastry marzipan\r\n                                lollipop\r\n                                sweet.</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use class <code>.callout-icon</code> to use icon with callout.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Round Callout</td>\r\n                      <td>\r\n                        <div class=\"bs-callout-danger callout-round callout-bordered callout-transparent p-1 px-2\">\r\n                          <strong>Not Bad!</strong>\r\n                          <p>Croissant carrot cake sesame snaps dessert wafer dessert wafer\r\n                            icing jelly.</p>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use class <code>.callout-round</code> for round callout.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Callouts end -->\r\n      <!-- Progress start -->\r\n      <div class=\"row\" id=\"progress\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Progress</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Default Progress</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"text-center\" id=\"example-caption-2\">Reticulating splines… 25%</div>\r\n                        <ngb-progressbar height=\"18px\" width=\"100px\" type=\"primary\" [value]=\"25\">\r\n                        </ngb-progressbar>\r\n                      </td>\r\n                      <td>To caption a progress bar, simply add a <code>&lt;div&gt;</code> with\r\n                        your caption\r\n                        text, align the text using a utility class, and associate the caption\r\n                        with the\r\n                        progress element using the aria-describedby attribute.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Striped Progress</td>\r\n                      <td>\r\n                        <ngb-progressbar height=\"18px\" width=\"100px\" [striped]=\"true\" type=\"danger\" [value]=\"60\">\r\n                        </ngb-progressbar>\r\n                      </td>\r\n                      <td>Uses a gradient to create a striped effect.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Progress Sizes</td>\r\n                      <td>\r\n                        <ngb-progressbar height=\"18px\" width=\"100px\" type=\"primary\" [value]=\"25\">\r\n                        </ngb-progressbar>\r\n                      </td>\r\n                      <td>Different sized progress. For Default progress, No size class needed.\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Progress end -->\r\n      <!-- Checkboxes start -->\r\n      <div class=\"row\" id=\"checkbox\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Checkboxes</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Basic Checkbox</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"card-body\">\r\n                          <fieldset class=\"checkbox\">\r\n                            <label>\r\n                              <input type=\"checkbox\" value=\"\" checked> I am checked\r\n                              Checkbox\r\n                            </label>\r\n                          </fieldset>\r\n                        </div>\r\n                      </td>\r\n                      <td>Basic Checkbox</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"width-200\">Custom Checkbox</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"card-body\">\r\n                          <span class=\"custom-control custom-checkbox\">\r\n                            <input type=\"checkbox\" class=\"custom-control-input\" name=\"customCheckbox\"\r\n                              id=\"customCheckbox1\" checked>\r\n                            <label class=\"custom-control-label\" for=\"customCheckbox1\">Checkbox Checked</label>\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                      <td>Custom Checkbox</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Checkboxes end -->\r\n      <!-- Radio Buttons start -->\r\n      <div class=\"row\" id=\"radio\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Radio Buttons</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Basic Radio Buttons</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"card-body\">\r\n                          <fieldset class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"radio\" value=\"\" checked> I am\r\n                              checked Radio\r\n                              Button\r\n                            </label>\r\n                          </fieldset>\r\n                        </div>\r\n                      </td>\r\n                      <td>Basic Radio Buttons</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"width-200\">Basic Radio Buttons</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"card-body\">\r\n                          <span class=\"custom-control custom-radio\">\r\n                            <input type=\"radio\" class=\"custom-control-input\" name=\"customRadio\" id=\"customRadio1\"\r\n                              checked>\r\n                            <label class=\"custom-control-label\" for=\"customRadio1\">Checkbox Checked</label>\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                      <td>Custom Radio Buttons</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Radio Buttons end -->\r\n      <!-- Select start -->\r\n      <div class=\"row\" id=\"select\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Select</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Single Select</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"card-body\">\r\n                          <div class=\"form-group\">\r\n                            <ng-multiselect-dropdown class=\"text\" name=\"city\" [data]=\"singleCities\" [(ngModel)]=\"basicSelectedItem\"\r\n                              [settings]=\"singleDropdownSettings\" (onSelect)=\"onItemSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>ng-multiselect-dropdown</code> for basic select control.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Disabled Mode</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <div class=\"form-group\">\r\n                            <ng-multiselect-dropdown name=\"city\" [data]=\"singleCities\" [(ngModel)]=\"disableSelectedItem\"\r\n                              [settings]=\"singleDropdownSettings\" (onSelect)=\"onItemSelect($event)\" [disabled]=\"true\">\r\n                            </ng-multiselect-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>Select will respond to the <code>disabled</code> attribute on\r\n                        <code>&lt;select&gt;</code>\r\n                        elements. You can also initialize Select with\r\n                        <code>disabled: true</code> to get\r\n                        the same effect.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Select end -->\r\n      <!-- Input start -->\r\n      <div class=\"row\" id=\"input\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Input</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Default Input text</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"card-body\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"basicInput\">\r\n                        </div>\r\n                      </td>\r\n                      <td>Standard form controls supported in all example form elements. Form\r\n                        controls\r\n                        automatically receives global styling. The .form-group class is the\r\n                        easiest way to\r\n                        add some structure to form elements like <code> &lt;input&gt;, &lt;textarea&gt;,\r\n                                  </code>and<code>&lt;select&gt;</code></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Input Font Color</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <input type=\"text\" class=\"form-control primary\" id=\"textColor\" value=\"Primary colored Text\">\r\n                        </div>\r\n                      </td>\r\n                      <td>Input Primary colored Font</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Input Border Color</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <input type=\"text\" class=\"form-control border-success\" id=\"textColor1\"\r\n                            placeholder=\"Success bordered Input\">\r\n                        </div>\r\n                      </td>\r\n                      <td>Input Success Border Color</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Input Background Color</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <input type=\"text\" class=\"form-control bg-warning\" id=\"textColor2\"\r\n                            value=\"Background color Input\">\r\n                        </div>\r\n                      </td>\r\n                      <td>Background Warning Color Input</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Default Input with Left Icon</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <fieldset class=\"form-group position-relative has-icon-left\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"iconLeft\"\r\n                              placeholder=\"Icon Left, Default Input\">\r\n                            <div class=\"form-control-position\">\r\n                              <i class=\"feather ft-phone-call primary\"></i>\r\n                            </div>\r\n                          </fieldset>\r\n                        </div>\r\n                      </td>\r\n                      <td>Left Icon Default Input</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Default Input group</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <div class=\"input-group\">\r\n                            <div class=\"input-group-prepend\">\r\n                              <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Addon to Left\"\r\n                              aria-describedby=\"basic-addon1\">\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>Add span with <code>.input-group-prepend</code> class before\r\n                        <code>&lt;input&gt;</code></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Input group with Switchery</td>\r\n                      <td>\r\n                        <div class=\"card-body\">\r\n                          <div class=\"input-group\">\r\n                            <span class=\"input-group-prepend\" id=\"radio-addon1\">\r\n                              <span class=\"input-group-text\">\r\n                                <ui-switch class=\"switchery\" size=\"small\" switchColor=\"white\" color=\"rgb(55, 188, 155)\"\r\n                                  checked></ui-switch>\r\n                              </span>\r\n                            </span>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Input with Left switchery\"\r\n                              aria-describedby=\"radio-addon1\" />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>Add span with <code>.input-group-prepend</code> class before\r\n                        <code>&lt;input&gt;</code>\r\n                        text and Add switchery inside.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Input end -->\r\n      <!-- Badges start -->\r\n      <div class=\"row\" id=\"badges\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Badges</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0 pills\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Basic Pills</td>\r\n                      <td class=\"text-center width-350\">\r\n                        <ngb-tabset type=\"pills\">\r\n                          <ngb-tab>\r\n                            <ng-template ngbTabTitle>59</ng-template>\r\n                          </ngb-tab>\r\n                        </ngb-tabset>\r\n                      </td>\r\n                      <td>Use the <code>.badge </code>class, followed by <code>.badge-pill</code>\r\n                        with <code>.badge-secondary</code>\r\n                        class within element to create default pill.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Pills With Glow effect</td>\r\n                      <td class=\"text-center pillsbackground\">\r\n                        <ngb-tabset type=\"pills\">\r\n                          <ngb-tab>\r\n                            <ng-template ngbTabTitle>68</ng-template>\r\n                          </ngb-tab>\r\n                        </ngb-tabset>\r\n                      </td>\r\n                      <td>Use the <code>.badge</code> class, followed by .badge-pill with\r\n                        <code>.badge-glow</code>\r\n                        class within element to create <code>glow</code> styled pill.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Pills with Icons</td>\r\n                      <td class=\"text-center\">\r\n                        <ngb-tabset type=\"pills\">\r\n                          <ngb-tab>\r\n                            <ng-template ngbTabTitle><span><i\r\n                                  class=\"font-medium-2 icon-line-height feather ft-droplet\"></i></span>\r\n                            </ng-template>\r\n                          </ngb-tab>\r\n                        </ngb-tabset>\r\n\r\n                      </td>\r\n                      <td>I dont have text to put hear</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Bordered Badges (Pills)</td>\r\n                      <td class=\"text-center pillsborder\">\r\n                        <ngb-tabset type=\"pills\">\r\n                          <ngb-tab>\r\n                            <ng-template ngbTabTitle>25</ng-template>\r\n                          </ngb-tab>\r\n                        </ngb-tabset>\r\n                      </td>\r\n                      <td>Use the <code>.badge</code> class, followed by<code>.badge-border</code>\r\n                        with <code>.badge-success</code>\r\n                        class within element to create success pill.\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Badges end -->\r\n      <!-- Tooltip Triggers start -->\r\n      <div class=\"row\" id=\"tooltip\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Tooltip Triggers</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Hover</td>\r\n                      <td class=\"width-350\">\r\n                        <div class=\"text-center\">\r\n                          <button type=\"button\" class=\"btn btn-info\" triggers=\"hover:click:hover\" [autoClose]=\"'inside'\"\r\n                            ngbTooltip=\"Hover Triggered\">\r\n                            On Hover Trigger\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>triggers=\"hover\"</code> for hover trigger. This is a\r\n                        default trigger.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Click</td>\r\n                      <td>\r\n                        <div class=\"text-center\">\r\n                          <button type=\"button\" class=\"btn btn-success\" triggers=\"click\" [autoClose]=\"'inside'\"\r\n                            ngbTooltip=\"Click Triggered\">\r\n                            On Click Trigger\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>triggers=\"click\"</code> for click trigger.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Focus</td>\r\n                      <td>\r\n                        <div class=\"text-center\">\r\n                          <button type=\"button\" class=\"btn btn-warning\" triggers=\"click\" [autoClose]=\"'false'\"\r\n                            ngbTooltip=\"Focus Triggered\">\r\n                            On Focus Trigger\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>triggers=\"focus\"</code> for focus trigger.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manual</td>\r\n                      <td>\r\n                        <div class=\"text-center\">\r\n                          <button type=\"button\" class=\"btn btn-danger\" ngbTooltip=\"Manual Tooltip\"\r\n                           triggers=\"manual\" #t=\"ngbTooltip\" [autoClose]=\"'outside'\" (click)=\"t.open()\">\r\n                            On Manual Trigger\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use <code>triggers=\"manual\"</code> for manual trigger. You can do\r\n                        show/hide\r\n                        using js</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Tooltip Triggers end -->\r\n      <!-- Tags start -->\r\n      <div class=\"row\" id=\"tags\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Tags</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"width-200\">Info Label</td>\r\n                      <td class=\"text-center width-350\">\r\n                        <div class=\"badge badge-info\">Info Label</div>\r\n                      </td>\r\n                      <td>Use the <code>.badge</code> class, followed by<code>.badge-info</code>\r\n                        class within\r\n                        element to create info label.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Tags with Icons</td>\r\n                      <td class=\"text-center\">\r\n                        <div class=\"badge badge-primary label-square\">\r\n                          <i class=\"la la-paperclip font-medium-2\"></i>\r\n                          <span>Primary Label</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use the .badge class, followed by<code>.badge-square</code> class for\r\n                        square\r\n                        bordered label.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Tags with Only Icons</td>\r\n                      <td class=\"text-center\">\r\n                        <div class=\"badge badge-success round\">\r\n                          <i class=\"font-medium-2 icon-line-height feather ft-upload\"></i>\r\n                        </div>\r\n                      </td>\r\n                      <td>Use the <code>.badge</code> class, followed by<code>.round</code> class\r\n                        for round\r\n                        warning label.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Bordered Tags</td>\r\n                      <td class=\"text-center\">\r\n                        <div class=\"badge border-danger danger badge-border\">Danger Label</div>\r\n                      </td>\r\n                      <td>Use the <code>.badge-bordered</code> with class <code>.badge</code>.\r\n                        Also use <code>.border-COLOR</code>\r\n                        class to add border and use <code>.COLOR</code> for text color</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Tags end -->\r\n      <!-- Switch start -->\r\n      <div class=\"row\" id=\"switch\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Switch</h4>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"table-responsive \">\r\n                <table class=\"table table-bordered mb-0\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Basic Switchery Toggle</td>\r\n                      <td class=\"text-center\">\r\n                        <div class=\"card-body\">\r\n                          <ui-switch class=\"switchery\" switchColor=\"white\" color=\"rgb(55, 188, 155)\" checked>\r\n                          </ui-switch>\r\n                          <label for=\"switcheryColor4\" class=\"card-title ml-1\"></label>\r\n                        </div>\r\n                      </td>\r\n                      <td>To set Switchery toggle, add <code>.switchery</code> class to checkbox.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Small Switchery</td>\r\n                      <td class=\"text-center\">\r\n                        <div class=\"card-body\">\r\n                          <ui-switch class=\"switchery\" switchColor=\"white\" color=\"rgb(55, 188, 155)\" size=\"small\"\r\n                            checked></ui-switch>\r\n                          <label for=\"switcherySize2\" class=\"font-medium-2 text-bold-600 ml-1\"></label>\r\n                        </div>\r\n                      </td>\r\n                      <td>To set Small Switchery toggle, add <code>.switchery-sm</code> class to\r\n                        checkbox.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Color Switchery (Danger Switchery)</td>\r\n                      <td class=\"text-center\">\r\n                        <div class=\"card-body\">\r\n                          <ui-switch class=\"switchery\" switchColor=\"white\" color=\"rgb(218, 68, 83)\" checked></ui-switch>\r\n                          <label for=\"switcheryColor3\" class=\"card-title ml-1\"></label>\r\n                        </div>\r\n                      </td>\r\n                      <td>To get Danger Switchery, add <code>.switchery-danger</code> class to\r\n                        checkbox.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ////////////////////////////////////////////////////////////////////////////-->\r\n","import { Component, OnInit, PipeTransform, Input, Output, Directive, EventEmitter, ViewChildren, QueryList } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { TableApiService } from '../../../../_services/table-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Country } from './countries';\r\nimport { CountryService } from '../../../../_services/country.service';\r\nimport { NgbdSortableHeader, SortEvent } from '../../../../_directives/sortable.directive';\r\n\r\ninterface Employee {\r\n  id: number;\r\n  firstname: string;\r\n  lastname: string;\r\n  username: string;\r\n}\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: { [key: string]: SortDirection } = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\nexport const compare = (v1, v2) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbSortable {\r\n\r\n  @Input() sortable: string;\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({ column: this.sortable, direction: this.direction });\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-ngxboostraptables',\r\n  templateUrl: './ngxboostraptables.component.html',\r\n  styleUrls: ['./ngxboostraptables.component.css'],\r\n  providers: [DecimalPipe, CountryService],\r\n})\r\nexport class NgxboostraptablesComponent implements OnInit {\r\n  breadcrumb: any;\r\n  PERSON: any;\r\n  TableData: any;\r\n  pipe: any;\r\n  page = 1;\r\n  pageSize = 4;\r\n  collectionSize: any;\r\n  column: any;\r\n  employeeSearch: Observable<Employee[]>;\r\n  filter = new FormControl('');\r\n  employeeSortable: any;\r\n  countries$: Observable<Country[]>;\r\n  total$: Observable<number>;\r\n  @ViewChildren(NgbdSortableHeader) headers1: QueryList<NgbdSortableHeader>;\r\n  @ViewChildren(NgbSortable) headers: QueryList<NgbSortable>;\r\n\r\n  constructor(private tableApiservice: TableApiService,\r\n    public service: CountryService,\r\n    pipe: DecimalPipe) {\r\n    this.countries$ = service.countries$,\r\n      this.total$ = service.total$;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.breadcrumb = {\r\n      'mainlabel': 'Ngxboostraptable',\r\n      'links': [\r\n        {\r\n          'name': 'Home',\r\n          'isLink': true,\r\n          'link': '/dashboard/sales'\r\n        },\r\n        {\r\n          'name': 'Tables',\r\n          'isLink': true,\r\n          'link': '#'\r\n        },\r\n        {\r\n          'name': 'Ngxboostraptable',\r\n          'isLink': false,\r\n          'link': '#'\r\n        }\r\n      ]\r\n    };\r\n    this.tableApiservice.getTableNgxData().subscribe(Response => {\r\n      console.log(\"Respuesta: \", Response);\r\n      this.TableData = Response;\r\n      this.getTabledata();\r\n      this.searchData(this.pipe);\r\n      this.employeeSortable = this.PERSON;\r\n      console.log(\"employeeSortable\", this.employeeSortable);\r\n    });\r\n  }\r\n\r\n  getTabledata() {\r\n    this.PERSON = this.TableData['EmployeeDetail'];\r\n    console.log(\"Persona\", this.PERSON);\r\n    this.collectionSize = this.PERSON.length;\r\n    console.log(\"Tamaño colección: \", this.collectionSize);\r\n  }\r\n  /**\r\n   * Pagination table\r\n   */\r\n  get PaginationData() {\r\n    if (this.PERSON) {\r\n      return this.PERSON.map((person, i) => ({ id: i + 1, ...person }))\r\n        .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\r\n    }\r\n  }\r\n  /**\r\n   * Search table\r\n   * '@param' text\r\n   * '@param' pipe\r\n   */\r\n  search(text: string, pipe: PipeTransform) {\r\n    return this.PERSON.filter(response => {\r\n      const term = text.toLowerCase();\r\n      return response.firstname.toLowerCase().includes(term)\r\n        || response.lastname.toLowerCase().includes(term)\r\n        || response.username.toLowerCase().includes(term);\r\n    });\r\n  }\r\n  /**\r\n   *\r\n   * '@param' pipe\r\n   */\r\n  searchData(pipe: DecimalPipe) {\r\n    this.employeeSearch = this.filter.valueChanges.pipe(\r\n      startWith(''),\r\n      map(text => this.search(text, pipe))\r\n    );\r\n  }\r\n  /**\r\n   *Sortable Table\r\n   * '@param' param0\r\n   */\r\n  onSort$({ column, direction }: SortEvent) {\r\n\r\n    // resetting other headers\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n\r\n    // sorting employeeSortable\r\n    if (direction === '') {\r\n      this.employeeSortable = this.PERSON;\r\n    } else {\r\n      this.employeeSortable = [...this.PERSON].sort((a, b) => {\r\n        const res = compare(a[column], b[column]);\r\n        return direction === 'asc' ? res : -res;\r\n      });\r\n    }\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    // resetting other headers\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div class=\"app-content content\">\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content-header row mb-1\">\r\n      <app-breadcrumb class=\"col-sm-12\" [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <!-- Basic Tables start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'basicTables'; message: 'Loading'\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Basic table</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">Using the most basic table markup, here’s how <code>.table</code>-based tables\r\n                look in Bootstrap. You can use any example of below table for your table and it can be use with\r\n                any type of ng-bootstrap tables. </p>\r\n            </div>\r\n            <div class=\"table-responsive card-body\">\r\n              <table class=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Firstname</th>\r\n                    <th scope=\"col\">Lastname</th>\r\n                    <th scope=\"col\">Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let element of PERSON; index as i\">\r\n                    <th scope=\"row\">{{ i + 1 }}</th>\r\n                    <td>{{ element.firstname }}</td>\r\n                    <td>{{ element.lastname }}</td>\r\n                    <td>{{ element.username }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"content-body\">\r\n      <!-- Basic Tables start -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'basicTables'; message: 'Loading'\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Pagination table</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">Using the most basic table markup, here’s how <code>.table</code>-based tables\r\n                look in Bootstrap. You can bind our <code>NgbPagination</code> component with slicing the data list.</p>\r\n            </div>\r\n            <div class=\"table-responsive card-body\">\r\n              <table class=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Firstname</th>\r\n                    <th scope=\"col\">Lastname</th>\r\n                    <th scope=\"col\">Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let element of PaginationData\">\r\n                    <th scope=\"row\">{{ element.id }}</th>\r\n                    <td>{{ element.firstname }}</td>\r\n                    <td>{{ element.lastname}}</td>\r\n                    <td>{{ element.username  }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div class=\"d-flex justify-content-between p-2\">\r\n                <ngb-pagination [collectionSize]=\"collectionSize\" [(page)]=\"page\" [pageSize]=\"pageSize\">\r\n                </ngb-pagination>\r\n\r\n                <select class=\"custom-select\" style=\"width: auto\" [(ngModel)]=\"pageSize\">\r\n                  <option [ngValue]=\"2\">2 items per page</option>\r\n                  <option [ngValue]=\"4\">4 items per page</option>\r\n                  <option [ngValue]=\"6\">6 items per page</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'basicTables'; message: 'Loading'\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Serch and Filtering table</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">You can do filter table data, in this case with observables and our\r\n                <code>NgbHighlight</code> component used in Typeahead. </p>\r\n            </div>\r\n            <div class=\"table-responsive card-body\">\r\n              <form>\r\n                <div class=\"form-group form-inline\">\r\n                  Full text search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\" />\r\n                </div>\r\n              </form>\r\n\r\n              <table class=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Firstname</th>\r\n                    <th scope=\"col\">Lastname</th>\r\n                    <th scope=\"col\">Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let element of employeeSearch | async; index as i\">\r\n                    <th scope=\"row\">{{ i + 1 }}</th>\r\n                    <td>\r\n                      <ngb-highlight [result]=\"element.firstname\" [term]=\"filter.value\"></ngb-highlight>\r\n                    </td>\r\n                    <td>\r\n                      <ngb-highlight [result]=\"element.lastname \" [term]=\"filter.value\"></ngb-highlight>\r\n                    </td>\r\n                    <td>\r\n                      <ngb-highlight [result]=\"element.username \" [term]=\"filter.value\"></ngb-highlight>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'basicTables'; message: 'Loading'\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Sortable table</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">You can introduce custom directives for table headers to sort columns.</p>\r\n            </div>\r\n            <div class=\"table-responsive card-body\">\r\n              <table class=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\" sortable=\"firstname\" (sort)=\"onSort$($event)\">Firstname</th>\r\n                    <th scope=\"col\" sortable=\"lastname\" (sort)=\"onSort$($event)\">Lastname</th>\r\n                    <th scope=\"col\" sortable=\"username\" (sort)=\"onSort$($event)\">Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let element of employeeSortable\">\r\n                    <th scope=\"row\">{{ element.id }}</th>\r\n                    <td>{{ element.firstname }}</td>\r\n                    <td>{{ element.lastname }}</td>\r\n                    <td>{{ element.username }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\" *blockUI=\"'basicTables'; message: 'Loading'\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Complate table</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">Table example with sorting,pagination and filtering.</p>\r\n            </div>\r\n            <div class=\"table-responsive card-body\">\r\n              <form>\r\n                <div class=\"form-group form-inline\">\r\n                  Full text search: <input class=\"form-control ml-2\" type=\"text\" name=\"searchTerm\"\r\n                    [(ngModel)]=\"service.searchTerm\" />\r\n                  <span class=\"ml-3\" *ngIf=\"service.loading$ | async\">Loading...</span>\r\n                </div>\r\n\r\n                <table class=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\" sortable=\"firstname\" (sort)=\"onSort($event)\">Firstname</th>\r\n                      <th scope=\"col\" sortable=\"lastname\" (sort)=\"onSort($event)\">lastname</th>\r\n                      <th scope=\"col\" sortable=\"username\" (sort)=\"onSort($event)\">username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let element of countries$ | async\">\r\n                      <th scope=\"row\">{{ element.id }}</th>\r\n                      <td>\r\n                        <ngb-highlight [result]=\"element.firstname\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                      </td>\r\n                      <td>\r\n                        <ngb-highlight [result]=\"element.lastname \" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                      </td>\r\n                      <td>\r\n                        <ngb-highlight [result]=\"element.username\" [term]=\"service.searchTerm\">\r\n                        </ngb-highlight>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <div class=\"d-flex justify-content-between p-2\">\r\n                  <ngb-pagination [collectionSize]=\"total$ | async\" [(page)]=\"service.page\"\r\n                    [pageSize]=\"service.pageSize\">\r\n                  </ngb-pagination>\r\n\r\n                  <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"service.pageSize\">\r\n                    <option [ngValue]=\"2\">2 items per page</option>\r\n                    <option [ngValue]=\"4\">4 items per page</option>\r\n                    <option [ngValue]=\"6\">6 items per page</option>\r\n                  </select>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!------Basic table end--->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasictableComponent } from './basictable/basictable.component';\r\nimport { TableborderComponent } from './tableborder/tableborder.component';\r\nimport { TablesizingComponent } from './tablesizing/tablesizing.component';\r\nimport { TablestylingComponent } from './tablestyling/tablestyling.component';\r\nimport { TablecomponentsComponent } from './tablecomponents/tablecomponents.component';\r\nimport { NgxboostraptablesComponent, NgbSortable} from './ngxboostraptables/ngxboostraptables.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { FormsModule , ReactiveFormsModule, } from '@angular/forms';\r\nimport { UiSwitchModule } from 'ngx-ui-switch';\r\nimport { CardModule } from '../../partials/general/card/card.module';\r\nimport { BreadcrumbModule } from 'src/app/_layout/breadcrumb/breadcrumb.module';\r\nimport { BlockUIModule } from 'ng-block-ui';\r\nimport { BlockTemplateComponent } from '../../../_layout/blockui/block-template.component';\r\nimport { NgbdSortableHeader } from '../../../_directives/sortable.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxDatatableModule,\r\n    CardModule,\r\n    BreadcrumbModule,\r\n    CommonModule,\r\n    UiSwitchModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BlockUIModule.forRoot({\r\n      template: BlockTemplateComponent\r\n    }),\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    NgbModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: 'basictable',\r\n        component: BasictableComponent\r\n      },\r\n      {\r\n        path: 'tableborder',\r\n        component: TableborderComponent\r\n      },\r\n      {\r\n        path: 'tablesizing',\r\n        component: TablesizingComponent\r\n      },\r\n    {\r\n        path: 'tablestyling',\r\n        component: TablestylingComponent\r\n      },\r\n      {\r\n        path: 'tablecomponents',\r\n        component: TablecomponentsComponent\r\n      },\r\n      {\r\n        path: 'ngxboostraptables',\r\n        component: NgxboostraptablesComponent\r\n      },\r\n     ]),\r\n  ],\r\n  declarations: [BasictableComponent, TableborderComponent, TablesizingComponent, TablestylingComponent, TablecomponentsComponent,\r\n    NgxboostraptablesComponent, NgbSortable, NgbdSortableHeader],\r\n})\r\n\r\nexport class BoostraptablesModule { }\r\n"],"sourceRoot":"webpack:///"}